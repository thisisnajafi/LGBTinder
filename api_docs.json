{
    "openapi": "3.1.0",
    "info": {
      "title": "LGBTinder",
      "version": "0.0.1"
    },
    "servers": [
      {
        "url": "http://127.0.0.1:8000/api"
      }
    ],
    "paths": {
      "/preferences/age": {
        "put": {
          "operationId": "agePreference.update",
          "tags": [
            "AgePreference"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "min_age": {
                      "type": "integer",
                      "minimum": 18,
                      "maximum": 100
                    },
                    "max_age": {
                      "type": "integer",
                      "minimum": 18,
                      "maximum": 100
                    }
                  },
                  "required": [
                    "min_age",
                    "max_age"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Age preferences updated successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "min_age": {
                            "type": "string"
                          },
                          "max_age": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "min_age",
                          "max_age"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation failed"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            }
          }
        },
        "get": {
          "operationId": "agePreference.get",
          "tags": [
            "AgePreference"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "min_age": {
                            "type": "string"
                          },
                          "max_age": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "min_age",
                          "max_age"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        },
        "delete": {
          "operationId": "agePreference.reset",
          "tags": [
            "AgePreference"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Age preferences reset successfully"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/auth/register": {
        "post": {
          "operationId": "auth.register",
          "tags": [
            "Auth"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "first_name": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "last_name": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "password": {
                      "type": "string",
                      "minLength": 8
                    },
                    "password_confirmation": {
                      "type": "string",
                      "minLength": 8
                    }
                  },
                  "required": [
                    "first_name",
                    "last_name",
                    "email",
                    "password",
                    "password_confirmation"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Registration successful! Please check your email for verification code."
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "user_id": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "resend_available_at": {
                                "type": "string"
                              },
                              "hourly_attempts_remaining": {
                                "type": "integer",
                                "example": 2
                              }
                            },
                            "required": [
                              "user_id",
                              "email",
                              "resend_available_at",
                              "hourly_attempts_remaining"
                            ]
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "data"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "This email address is already registered. Please login instead."
                          },
                          "errors": {
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "array",
                                "prefixItems": [
                                  {
                                    "type": "string",
                                    "example": "This email address is already registered. Please login instead."
                                  }
                                ],
                                "minItems": 1,
                                "maxItems": 1,
                                "additionalItems": false
                              }
                            },
                            "required": [
                              "email"
                            ]
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "errors"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Email already registered but not verified. Please check your email for verification code or request a new one."
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "user_id": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "needs_verification": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "user_id",
                              "email",
                              "needs_verification"
                            ]
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "data"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "This email address is already registered. Please use a different email or try logging in."
                          },
                          "errors": {
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "array",
                                "prefixItems": [
                                  {
                                    "type": "string",
                                    "example": "This email address is already registered. Please use a different email or try logging in."
                                  }
                                ],
                                "minItems": 1,
                                "maxItems": 1,
                                "additionalItems": false
                              }
                            },
                            "required": [
                              "email"
                            ]
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "errors"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Validation error"
                          },
                          "errors": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "errors"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Registration failed"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/auth/login": {
        "post": {
          "operationId": "auth.login",
          "tags": [
            "Auth"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "device_name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "email",
                    "device_name"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Login code sent to your email. Please check your inbox."
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string"
                          },
                          "resend_available_at": {
                            "type": "string"
                          },
                          "hourly_attempts_remaining": {
                            "type": "integer",
                            "example": 2
                          }
                        },
                        "required": [
                          "email",
                          "resend_available_at",
                          "hourly_attempts_remaining"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Please verify your email address before logging in."
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Your account has been banned. Please contact support."
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "User not found. Please register first."
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation error"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            },
            "429": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Too many code requests. Please try again later."
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "hourly_limit_reached": {
                                "type": "boolean"
                              },
                              "reset_time": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "hourly_limit_reached",
                              "reset_time"
                            ]
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "data"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Please wait before requesting another code"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "resend_available_at": {
                                "type": "string"
                              },
                              "remaining_seconds": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "resend_available_at",
                              "remaining_seconds"
                            ]
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "data"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Login failed"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/auth/verify-login-code": {
        "post": {
          "operationId": "auth.verifyLoginCode",
          "tags": [
            "Auth"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "code": {
                      "type": "string",
                      "minLength": 6,
                      "maxLength": 6
                    },
                    "device_name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "email",
                    "code",
                    "device_name"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Login successful"
                          },
                          "data": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "data"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Profile completion required"
                          },
                          "data": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "data"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Please verify your email address before logging in."
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Your account has been banned. Please contact support."
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Invalid or expired verification code"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Validation error"
                          },
                          "errors": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "errors"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Login failed"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/auth/resend-verification": {
        "post": {
          "operationId": "auth.resendVerification",
          "tags": [
            "Auth"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email"
                    }
                  },
                  "required": [
                    "email"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "New verification code sent successfully!"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "user_id": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "next_available_at": {
                                "type": "string"
                              },
                              "hourly_attempts_remaining": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "user_id",
                              "email",
                              "next_available_at",
                              "hourly_attempts_remaining"
                            ]
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "data"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Verification code sent successfully!"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "user_id": {
                                "type": "string"
                              },
                              "email": {
                                "type": "string"
                              },
                              "resend_available_at": {
                                "type": "string"
                              },
                              "hourly_attempts_remaining": {
                                "type": "integer",
                                "example": 2
                              }
                            },
                            "required": [
                              "user_id",
                              "email",
                              "resend_available_at",
                              "hourly_attempts_remaining"
                            ]
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "data"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Email is already verified. Please login instead."
                          },
                          "errors": {
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "array",
                                "prefixItems": [
                                  {
                                    "type": "string",
                                    "example": "Email is already verified. Please login instead."
                                  }
                                ],
                                "minItems": 1,
                                "maxItems": 1,
                                "additionalItems": false
                              }
                            },
                            "required": [
                              "email"
                            ]
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "errors"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Validation error"
                          },
                          "errors": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "errors"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "429": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Please wait before requesting a new code"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "next_available_at": {
                            "type": "string"
                          },
                          "seconds_remaining": {
                            "type": "string"
                          },
                          "hourly_attempts_remaining": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "next_available_at",
                          "seconds_remaining",
                          "hourly_attempts_remaining"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to resend verification code"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/auth/resend-verification-existing": {
        "post": {
          "operationId": "auth.resendVerificationForExistingUser",
          "tags": [
            "Auth"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email"
                    }
                  },
                  "required": [
                    "email"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Verification code sent successfully! Please check your email."
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string"
                          },
                          "email": {
                            "type": "string"
                          },
                          "resend_available_at": {
                            "type": "string"
                          },
                          "hourly_attempts_remaining": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "user_id",
                          "email",
                          "resend_available_at",
                          "hourly_attempts_remaining"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Invalid user status. Please contact support."
                          },
                          "errors": {
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "array",
                                "prefixItems": [
                                  {
                                    "type": "string",
                                    "example": "Invalid user status. Please contact support."
                                  }
                                ],
                                "minItems": 1,
                                "maxItems": 1,
                                "additionalItems": false
                              }
                            },
                            "required": [
                              "email"
                            ]
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "errors"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Email is already verified. Please login instead."
                          },
                          "errors": {
                            "type": "object",
                            "properties": {
                              "email": {
                                "type": "array",
                                "prefixItems": [
                                  {
                                    "type": "string",
                                    "example": "Email is already verified. Please login instead."
                                  }
                                ],
                                "minItems": 1,
                                "maxItems": 1,
                                "additionalItems": false
                              }
                            },
                            "required": [
                              "email"
                            ]
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "errors"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Validation error"
                          },
                          "errors": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "errors"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "429": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Too many code requests. Please try again later."
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "hourly_limit_reached": {
                                "type": "boolean"
                              },
                              "reset_time": {
                                "type": "string"
                              },
                              "remaining_seconds": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "hourly_limit_reached",
                              "reset_time",
                              "remaining_seconds"
                            ]
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "data"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Please wait before requesting another code"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "resend_available_at": {
                                "type": "string"
                              },
                              "remaining_seconds": {
                                "type": "string"
                              },
                              "hourly_attempts_remaining": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "resend_available_at",
                              "remaining_seconds",
                              "hourly_attempts_remaining"
                            ]
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "data"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to send verification code"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/auth/send-verification": {
        "post": {
          "operationId": "auth.verifyRegistrationCode",
          "tags": [
            "Auth"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "code": {
                      "type": "string",
                      "minLength": 6,
                      "maxLength": 6
                    }
                  },
                  "required": [
                    "email",
                    "code"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Email verified successfully! Please complete your profile."
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "user": {
                            "type": "string"
                          },
                          "token": {
                            "type": "string"
                          },
                          "token_type": {
                            "type": "string",
                            "example": "Bearer"
                          },
                          "needs_profile_completion": {
                            "type": "boolean"
                          },
                          "profile_completion_status": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "user",
                          "token",
                          "token_type",
                          "needs_profile_completion",
                          "profile_completion_status"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Invalid or expired verification code"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Email is already verified. Please login."
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Validation error"
                          },
                          "errors": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "errors"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Verification failed"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/auth/send-otp": {
        "post": {
          "operationId": "auth.sendOtp",
          "tags": [
            "Auth"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email"
                    }
                  },
                  "required": [
                    "email"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "OTP code sent to your email."
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation error"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            },
            "429": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "You must wait at least 2 minutes before requesting another OTP."
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to send OTP"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/auth/verify-otp": {
        "post": {
          "operationId": "auth.verifyOtp",
          "tags": [
            "Auth"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "code": {
                      "type": "string",
                      "minLength": 6,
                      "maxLength": 6
                    }
                  },
                  "required": [
                    "email",
                    "code"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "OTP verified. You can now reset your password."
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Invalid or expired OTP code"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Validation error"
                          },
                          "errors": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "errors"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Verification failed"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/auth/reset-password": {
        "post": {
          "operationId": "auth.resetPassword",
          "tags": [
            "Auth"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "code": {
                      "type": "string",
                      "minLength": 6,
                      "maxLength": 6
                    },
                    "password": {
                      "type": "string",
                      "minLength": 8
                    },
                    "password_confirmation": {
                      "type": "string",
                      "minLength": 8
                    }
                  },
                  "required": [
                    "email",
                    "code",
                    "password",
                    "password_confirmation"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Password reset successfully."
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Invalid or expired OTP code"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Validation error"
                          },
                          "errors": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "errors"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Password reset failed"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/complete-registration": {
        "post": {
          "operationId": "auth.completeRegistration",
          "tags": [
            "Auth"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "phone_number": {
                      "type": "string"
                    },
                    "country_code": {
                      "type": "string",
                      "maxLength": 5
                    },
                    "device_name": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "country": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "gender": {
                      "type": "integer"
                    },
                    "birth_date": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "min_age_preference": {
                      "type": "integer",
                      "minimum": 18,
                      "maximum": 100
                    },
                    "max_age_preference": {
                      "type": "integer",
                      "minimum": 18,
                      "maximum": 100
                    },
                    "profile_bio": {
                      "type": "string",
                      "maxLength": 500
                    },
                    "weight": {
                      "type": "integer",
                      "minimum": 30,
                      "maximum": 200
                    },
                    "height": {
                      "type": "integer",
                      "minimum": 100,
                      "maximum": 250
                    },
                    "smoke": {
                      "type": "boolean"
                    },
                    "drink": {
                      "type": "boolean"
                    },
                    "gym": {
                      "type": "boolean"
                    },
                    "music_genres": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "minItems": 1
                    },
                    "educations": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "minItems": 1
                    },
                    "jobs": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "minItems": 1
                    },
                    "languages": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "minItems": 1
                    },
                    "interests": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "minItems": 1
                    },
                    "preferred_genders": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "minItems": 1
                    },
                    "relation_goals": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "minItems": 1
                    }
                  },
                  "required": [
                    "phone_number",
                    "country_code",
                    "device_name",
                    "city",
                    "country",
                    "gender",
                    "birth_date",
                    "min_age_preference",
                    "max_age_preference",
                    "profile_bio",
                    "weight",
                    "height",
                    "smoke",
                    "drink",
                    "gym",
                    "music_genres",
                    "educations",
                    "jobs",
                    "languages",
                    "interests",
                    "preferred_genders",
                    "relation_goals"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Registration completed successfully!"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "user": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "phone_number": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "country_code": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "phone_number",
                              "city",
                              "country",
                              "country_code"
                            ]
                          },
                          "token": {
                            "type": "string"
                          },
                          "token_type": {
                            "type": "string",
                            "example": "Bearer"
                          },
                          "profile_completed": {
                            "type": "boolean"
                          },
                          "needs_profile_completion": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "user",
                          "token",
                          "token_type",
                          "profile_completed",
                          "needs_profile_completion"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Please verify your email address first."
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Unauthorized. This endpoint requires profile completion permission."
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "User not found"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation error"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Registration completion failed"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/user/show-adult-content": {
        "post": {
          "operationId": "auth.setShowAdultContent",
          "tags": [
            "Auth"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "show_adult_content": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "show_adult_content"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "show_adult_content": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "success",
                      "show_adult_content"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        }
      },
      "/user/onesignal-player": {
        "post": {
          "operationId": "auth.saveOneSignalPlayerId",
          "tags": [
            "Auth"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "player_id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "player_id"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "success"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        }
      },
      "/user/notification-preferences": {
        "post": {
          "operationId": "auth.updateNotificationPreferences",
          "tags": [
            "Auth"
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "match_notifications": {
                      "type": "boolean"
                    },
                    "like_notifications": {
                      "type": "boolean"
                    },
                    "message_notifications": {
                      "type": "boolean"
                    },
                    "profile_view_notifications": {
                      "type": "boolean"
                    },
                    "story_notifications": {
                      "type": "boolean"
                    },
                    "feed_notifications": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Notification preferences updated successfully"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        }
      },
      "/user/notification-history": {
        "get": {
          "operationId": "auth.getNotificationHistory",
          "tags": [
            "Auth"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/auth/change-password": {
        "post": {
          "operationId": "auth.changePassword",
          "tags": [
            "Auth"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "old_password": {
                      "type": "string"
                    },
                    "new_password": {
                      "type": "string",
                      "minLength": 8
                    },
                    "new_password_confirmation": {
                      "type": "string",
                      "minLength": 8
                    }
                  },
                  "required": [
                    "old_password",
                    "new_password",
                    "new_password_confirmation"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Password has been changed successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string"
                          },
                          "change_time": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "user_id",
                          "change_time"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Old password is incorrect"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation failed"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to change password. Please try again."
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/auth/delete-account": {
        "delete": {
          "operationId": "auth.deleteAccount",
          "tags": [
            "Auth"
          ],
          "parameters": [
            {
              "name": "password",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Account deleted successfully"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation failed"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to delete account"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/auth/logout": {
        "post": {
          "operationId": "auth.logout",
          "tags": [
            "Auth"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Successfully logged out"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Logout failed"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/block/user": {
        "post": {
          "operationId": "block.blockUser",
          "summary": "Block a user",
          "tags": [
            "Block"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_id": {
                      "type": "integer"
                    },
                    "reason": {
                      "type": "string",
                      "maxLength": 255
                    }
                  },
                  "required": [
                    "user_id",
                    "reason"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "User blocked successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "blocked_user_id": {
                            "type": "string"
                          },
                          "reason": {
                            "type": "string"
                          },
                          "blocked_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "blocked_user_id",
                          "reason",
                          "blocked_at"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "User is already blocked"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "You cannot block yourself"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "The user does not exist or is inactive"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        },
        "delete": {
          "operationId": "block.unblockUser",
          "summary": "Unblock a user",
          "tags": [
            "Block"
          ],
          "parameters": [
            {
              "name": "user_id",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "User unblocked successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "unblocked_user_id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "unblocked_user_id"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "User is not blocked"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        }
      },
      "/block/list": {
        "get": {
          "operationId": "block.getBlockedUsers",
          "summary": "Get list of blocked users",
          "tags": [
            "Block"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "blocked_users": {
                            "type": "string"
                          },
                          "total_blocked": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "blocked_users",
                          "total_blocked"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/block/check": {
        "get": {
          "operationId": "block.checkIfBlocked",
          "summary": "Check if a user is blocked",
          "tags": [
            "Block"
          ],
          "parameters": [
            {
              "name": "user_id",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "is_blocked": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "is_blocked"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        }
      },
      "/calls/initiate": {
        "post": {
          "operationId": "call.initiateCall",
          "summary": "Initiate a call (video or audio)",
          "tags": [
            "Call"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "receiver_id": {
                      "type": "integer"
                    },
                    "call_type": {
                      "type": "string",
                      "enum": [
                        "audio",
                        "video"
                      ]
                    }
                  },
                  "required": [
                    "receiver_id",
                    "call_type"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Call initiated successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "call_id": {
                            "type": "string"
                          },
                          "call_type": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "call_token": {
                            "type": "string"
                          },
                          "receiver": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "avatar_url": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "name",
                              "avatar_url"
                            ]
                          }
                        },
                        "required": [
                          "call_id",
                          "call_type",
                          "status",
                          "call_token",
                          "receiver"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "You cannot call yourself"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "You can only call users you have matched with or superliked"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "You cannot call this user"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "Banned users cannot make calls"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "The user you are trying to call does not exist or is inactive"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "409": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "There is already an active call with this user"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/calls/accept": {
        "post": {
          "operationId": "call.acceptCall",
          "summary": "Accept an incoming call",
          "tags": [
            "Call"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "call_id": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "call_id"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Call accepted"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "call_id": {
                            "type": "string"
                          },
                          "call_type": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "call_token": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "call_id",
                          "call_type",
                          "status",
                          "call_token"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Call not found or already processed"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/calls/reject": {
        "post": {
          "operationId": "call.rejectCall",
          "summary": "Reject an incoming call",
          "tags": [
            "Call"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "call_id": {
                      "type": "integer"
                    },
                    "reason": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "call_id"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Call rejected"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "call_id": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "call_id",
                          "status"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Call not found or already processed"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/calls/end": {
        "post": {
          "operationId": "call.endCall",
          "summary": "End an active call",
          "tags": [
            "Call"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "call_id": {
                      "type": "integer"
                    },
                    "reason": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "call_id"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Call ended"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "call_id": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "duration": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "call_id",
                          "status",
                          "duration"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Call not found or not active"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/calls/history": {
        "get": {
          "operationId": "call.getCallHistory",
          "summary": "Get call history for a user",
          "tags": [
            "Call"
          ],
          "parameters": [
            {
              "name": "per_page",
              "in": "query",
              "schema": {
                "type": "string",
                "default": 20
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/calls/active": {
        "get": {
          "operationId": "call.getActiveCall",
          "summary": "Get active call for a user",
          "tags": [
            "Call"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "success"
                          },
                          "data": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "status",
                          "data"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "success"
                          },
                          "data": {
                            "type": "null"
                          }
                        },
                        "required": [
                          "status",
                          "data"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/chat/send": {
        "post": {
          "operationId": "chat.sendMessage",
          "summary": "Send a message to another user",
          "tags": [
            "Chat"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "receiver_id": {
                      "type": "integer"
                    },
                    "message": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "message_type": {
                      "type": "string",
                      "enum": [
                        "text",
                        "image",
                        "video",
                        "voice"
                      ]
                    },
                    "media": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "binary",
                      "contentMediaType": "application/octet-stream"
                    },
                    "media_duration": {
                      "type": [
                        "number",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "receiver_id",
                    "message_type"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Message sent successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "message_type": {
                            "type": "string"
                          },
                          "media_path": {
                            "type": "string"
                          },
                          "media_duration": {
                            "type": "string"
                          },
                          "sender_name": {
                            "type": "string"
                          },
                          "receiver_name": {
                            "type": "string"
                          },
                          "created_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "message",
                          "message_type",
                          "media_path",
                          "media_duration",
                          "sender_name",
                          "receiver_name",
                          "created_at"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "You can only send messages to users you have matched with or superliked"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "You cannot send messages to this user"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "Banned users cannot send messages"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "The user you are trying to message does not exist or is inactive"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to send message"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/chat/history": {
        "get": {
          "operationId": "chat.getChatHistory",
          "summary": "Get chat history with a specific user",
          "tags": [
            "Chat"
          ],
          "parameters": [
            {
              "name": "user_id",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "page",
              "in": "query",
              "schema": {
                "type": [
                  "integer",
                  "null"
                ],
                "minimum": 1
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "You can only view messages with users you have matched with or superliked"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "You cannot view messages with this user"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        }
      },
      "/chat/users": {
        "get": {
          "operationId": "chat.getChatUsers",
          "summary": "Get list of users with whom the current user has chat access",
          "tags": [
            "Chat"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "minItems": 0,
                        "maxItems": 0,
                        "additionalItems": false
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/chat/access-users": {
        "get": {
          "operationId": "chat.getChatAccessUsers",
          "summary": "Get users with chat access (matches and superlikes)",
          "tags": [
            "Chat"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "users": {
                            "type": "string"
                          },
                          "total_count": {
                            "type": "string"
                          },
                          "matches_count": {
                            "type": "string"
                          },
                          "superlikes_count": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "users",
                          "total_count",
                          "matches_count",
                          "superlikes_count"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/chat/message": {
        "delete": {
          "operationId": "chat.deleteMessage",
          "summary": "Delete a message",
          "tags": [
            "Chat"
          ],
          "parameters": [
            {
              "name": "message_id",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Message deleted successfully"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        }
      },
      "/chat/unread-count": {
        "get": {
          "operationId": "chat.getUnreadCount",
          "summary": "Get unread message count",
          "tags": [
            "Chat"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "unread_count": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "unread_count"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/chat/typing": {
        "post": {
          "operationId": "chat.setTyping",
          "summary": "Set typing indicator",
          "tags": [
            "Chat"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "receiver_id": {
                      "type": "integer"
                    },
                    "is_typing": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "receiver_id"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Typing indicator sent"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "You can only send typing indicators to users you have matched with or superliked"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        }
      },
      "/chat/read": {
        "post": {
          "operationId": "chat.markAsRead",
          "summary": "Mark messages as read",
          "tags": [
            "Chat"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sender_id": {
                      "type": "integer"
                    },
                    "message_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  },
                  "required": [
                    "sender_id"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Messages marked as read"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "read_count": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "read_count"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "You can only mark messages as read from users you have matched with or superliked"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        }
      },
      "/chat/online": {
        "post": {
          "operationId": "chat.setOnlineStatus",
          "summary": "Set online status",
          "tags": [
            "Chat"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "is_online": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "is_online"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Online status updated"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "is_online": {
                            "type": "string"
                          },
                          "last_seen_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "is_online",
                          "last_seen_at"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        }
      },
      "/education": {
        "get": {
          "operationId": "educationApi.index",
          "summary": "Get all active education levels",
          "tags": [
            "EducationApi"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/favorites/add": {
        "post": {
          "operationId": "favorite.addFavorite",
          "summary": "Add a user to favorites",
          "tags": [
            "Favorite"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_id": {
                      "type": "integer"
                    },
                    "note": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "maxLength": 1000
                    }
                  },
                  "required": [
                    "user_id"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "User added to favorites successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "favorite_user_id": {
                            "type": "string"
                          },
                          "note": {
                            "type": "string"
                          },
                          "added_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "favorite_user_id",
                          "note",
                          "added_at"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "User is already in your favorites"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "You cannot add yourself to favorites"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Banned users cannot add favorites"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "The user does not exist or is inactive"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        }
      },
      "/favorites/remove": {
        "delete": {
          "operationId": "favorite.removeFavorite",
          "summary": "Remove a user from favorites",
          "tags": [
            "Favorite"
          ],
          "parameters": [
            {
              "name": "user_id",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "User removed from favorites successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "removed_user_id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "removed_user_id"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "User is not in your favorites"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        }
      },
      "/favorites/list": {
        "get": {
          "operationId": "favorite.getFavorites",
          "summary": "Get list of favorite users",
          "tags": [
            "Favorite"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "favorites": {
                            "type": "string"
                          },
                          "total_favorites": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "favorites",
                          "total_favorites"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/favorites/check": {
        "get": {
          "operationId": "favorite.checkIfFavorited",
          "summary": "Check if a user is in favorites",
          "tags": [
            "Favorite"
          ],
          "parameters": [
            {
              "name": "user_id",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "is_favorited": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "is_favorited"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        }
      },
      "/favorites/note": {
        "put": {
          "operationId": "favorite.updateFavoriteNote",
          "summary": "Update note for a favorite user",
          "tags": [
            "Favorite"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_id": {
                      "type": "integer"
                    },
                    "note": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "maxLength": 1000
                    }
                  },
                  "required": [
                    "user_id"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Favorite note updated successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "favorite_user_id": {
                            "type": "string"
                          },
                          "note": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "favorite_user_id",
                          "note",
                          "updated_at"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "User is not in your favorites"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        }
      },
      "/feeds": {
        "get": {
          "operationId": "feed.index",
          "tags": [
            "Feed"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/feeds/create": {
        "post": {
          "operationId": "feed.store",
          "tags": [
            "Feed"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "string",
                      "maxLength": 1000
                    },
                    "image": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "binary",
                      "contentMediaType": "application/octet-stream",
                      "maxLength": 2048
                    },
                    "tags": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string",
                        "maxLength": 30
                      }
                    }
                  },
                  "required": [
                    "text"
                  ]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "text": {
                        "type": "string"
                      },
                      "tags": {
                        "type": "string"
                      },
                      "image_path": {
                        "type": "string"
                      },
                      "created_at": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "text",
                      "tags",
                      "image_path",
                      "created_at"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        }
      },
      "/feeds/{id}": {
        "get": {
          "operationId": "feed.show",
          "tags": [
            "Feed"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Not authorized"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Not authorized to view this feed"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "404": {
              "$ref": "#/components/responses/ModelNotFoundException"
            }
          }
        },
        "delete": {
          "operationId": "feed.destroy",
          "tags": [
            "Feed"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Feed deleted"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Not authorized"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/feeds/update/{id}": {
        "put": {
          "operationId": "feed.update",
          "tags": [
            "Feed"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "string",
                      "maxLength": 1000
                    },
                    "image": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "binary",
                      "contentMediaType": "application/octet-stream",
                      "maxLength": 2048
                    },
                    "tags": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string",
                        "maxLength": 30
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "text": {
                        "type": "string"
                      },
                      "tags": {
                        "type": "string"
                      },
                      "image_path": {
                        "type": "string"
                      },
                      "updated_at": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "text",
                      "tags",
                      "image_path",
                      "updated_at"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Not authorized"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        }
      },
      "/feeds/{feedId}/comments": {
        "get": {
          "operationId": "feedComment.index",
          "tags": [
            "FeedComment"
          ],
          "parameters": [
            {
              "name": "feedId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Not authorized"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  }
                }
              }
            }
          }
        },
        "post": {
          "operationId": "feedComment.store",
          "tags": [
            "FeedComment"
          ],
          "parameters": [
            {
              "name": "feedId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "string",
                      "maxLength": 1000
                    },
                    "parent_id": {
                      "type": [
                        "integer",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "text"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Comment created successfully"
                      },
                      "comment": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "comment"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Parent comment does not belong to this feed"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Not authorized"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        }
      },
      "/feeds/{feedId}/comments/{commentId}/like": {
        "post": {
          "operationId": "feedComment.like",
          "tags": [
            "FeedComment"
          ],
          "parameters": [
            {
              "name": "feedId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "commentId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "like_count": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "like_count"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/feeds/{feedId}/comments/{commentId}/dislike": {
        "post": {
          "operationId": "feedComment.dislike",
          "tags": [
            "FeedComment"
          ],
          "parameters": [
            {
              "name": "feedId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "commentId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "dislike_count": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "dislike_count"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/feeds/{feedId}/comments/{commentId}": {
        "put": {
          "operationId": "feedComment.update",
          "tags": [
            "FeedComment"
          ],
          "parameters": [
            {
              "name": "feedId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "commentId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "string",
                      "maxLength": 1000
                    }
                  },
                  "required": [
                    "text"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Comment updated successfully"
                      },
                      "comment": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "message",
                      "comment"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Not authorized"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        },
        "delete": {
          "operationId": "feedComment.destroy",
          "tags": [
            "FeedComment"
          ],
          "parameters": [
            {
              "name": "feedId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "commentId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Comment and all its replies deleted successfully"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Not authorized"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/feeds/{feedId}/reactions": {
        "post": {
          "operationId": "feedReaction.store",
          "tags": [
            "FeedReaction"
          ],
          "parameters": [
            {
              "name": "feedId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "like",
                        "dislike"
                      ]
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "like_count": {
                            "type": "string"
                          },
                          "dislike_count": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "like_count",
                          "dislike_count"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Reaction removed"
                          },
                          "id": {
                            "type": "string"
                          },
                          "like_count": {
                            "type": "string"
                          },
                          "dislike_count": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message",
                          "id",
                          "like_count",
                          "dislike_count"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Not authorized"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        },
        "delete": {
          "operationId": "feedReaction.destroy",
          "tags": [
            "FeedReaction"
          ],
          "parameters": [
            {
              "name": "feedId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "like_count": {
                        "type": "string"
                      },
                      "dislike_count": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id",
                      "like_count",
                      "dislike_count"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Not authorized"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  }
                }
              }
            }
          }
        },
        "get": {
          "operationId": "feedReaction.listReactions",
          "tags": [
            "FeedReaction"
          ],
          "parameters": [
            {
              "name": "feedId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "type",
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/feeds/{feedId}/my-reaction": {
        "get": {
          "operationId": "feedReaction.myReaction",
          "tags": [
            "FeedReaction"
          ],
          "parameters": [
            {
              "name": "feedId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "reaction": {
                        "type": [
                          "string",
                          "null"
                        ]
                      }
                    },
                    "required": [
                      "reaction"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/my/liked-feeds": {
        "get": {
          "operationId": "feedReaction.feedsILiked",
          "tags": [
            "FeedReaction"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/genders": {
        "get": {
          "operationId": "genderApi.index",
          "tags": [
            "GenderApi"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/group-chat/create": {
        "post": {
          "operationId": "groupChat.createGroup",
          "summary": "Create a new group chat",
          "tags": [
            "GroupChat"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "description": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "maxLength": 500
                    },
                    "member_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "minItems": 1
                    }
                  },
                  "required": [
                    "name",
                    "member_ids"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Group created successfully"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Some users are invalid, banned, or inactive"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "You can only create a group with users you are matched with"
                      },
                      "non_matched_user_id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "non_matched_user_id"
                    ]
                  }
                }
              }
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/group-chat/groups": {
        "get": {
          "operationId": "groupChat.getUserGroups",
          "summary": "Get user's groups",
          "tags": [
            "GroupChat"
          ],
          "parameters": [
            {
              "name": "per_page",
              "in": "query",
              "schema": {
                "type": "string",
                "default": 20
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/group-chat/groups/{groupId}": {
        "get": {
          "operationId": "groupChat.getGroupDetails",
          "summary": "Get group details",
          "tags": [
            "GroupChat"
          ],
          "parameters": [
            {
              "name": "groupId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Group not found or access denied"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/group-chat/send-message": {
        "post": {
          "operationId": "groupChat.sendGroupMessage",
          "summary": "Send message to group",
          "tags": [
            "GroupChat"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "group_id": {
                      "type": "integer"
                    },
                    "message": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "message_type": {
                      "type": "string",
                      "enum": [
                        "text",
                        "image",
                        "video",
                        "voice"
                      ]
                    },
                    "media": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "binary",
                      "contentMediaType": "application/octet-stream"
                    },
                    "media_duration": {
                      "type": [
                        "number",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "group_id",
                    "message_type"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Message sent successfully"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "Banned users cannot send messages"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "You are not a member of this group"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Group not found"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/group-chat/groups/{groupId}/messages": {
        "get": {
          "operationId": "groupChat.getGroupChatHistory",
          "summary": "Get group chat history",
          "tags": [
            "GroupChat"
          ],
          "parameters": [
            {
              "name": "groupId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "per_page",
              "in": "query",
              "schema": {
                "type": "string",
                "default": 50
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "You are not a member of this group"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/group-chat/groups/{groupId}/add-members": {
        "post": {
          "operationId": "groupChat.addMembers",
          "summary": "Add members to group",
          "tags": [
            "GroupChat"
          ],
          "parameters": [
            {
              "name": "groupId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      },
                      "minItems": 1
                    }
                  },
                  "required": [
                    "user_ids"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Members added successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "added_members": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "minItems": 0,
                            "maxItems": 0,
                            "additionalItems": false
                          },
                          "skipped_members": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "minItems": 0,
                            "maxItems": 0,
                            "additionalItems": false
                          },
                          "total_added": {
                            "type": "string"
                          },
                          "total_skipped": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "added_members",
                          "skipped_members",
                          "total_added",
                          "total_skipped"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Some users are invalid, banned, or inactive"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Only group admins can add members"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/group-chat/groups/{groupId}/remove-member": {
        "delete": {
          "operationId": "groupChat.removeMember",
          "summary": "Remove member from group",
          "tags": [
            "GroupChat"
          ],
          "parameters": [
            {
              "name": "groupId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "user_id",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Member removed successfully"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Cannot remove the group creator"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Only group admins can remove members"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "User is not a member of this group"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "Group not found or access denied"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/group-chat/groups/{groupId}/leave": {
        "post": {
          "operationId": "groupChat.leaveGroup",
          "summary": "Leave group",
          "tags": [
            "GroupChat"
          ],
          "parameters": [
            {
              "name": "groupId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "You have left the group successfully"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Group creator cannot leave. Transfer ownership or delete the group instead."
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "You are not a member of this group"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/images/upload": {
        "post": {
          "operationId": "image.upload",
          "tags": [
            "Image"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "gallery"
                      ]
                    },
                    "images": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "format": "binary",
                        "contentMediaType": "application/octet-stream",
                        "description": "Only 2 gallery images allowed",
                        "maxLength": 5120
                      },
                      "maxItems": 2
                    }
                  },
                  "required": [
                    "type",
                    "images"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Gallery images uploaded successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "images": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "minItems": 0,
                            "maxItems": 0,
                            "additionalItems": false
                          }
                        },
                        "required": [
                          "images"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "Image dimensions too small (min 100x100)"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "Validation failed"
                          },
                          "errors": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "errors"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/images/{id}": {
        "delete": {
          "operationId": "image.delete",
          "tags": [
            "Image"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Image deleted successfully"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Unauthorized"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Image not found"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/images/{id}/set-primary": {
        "post": {
          "operationId": "image.setPrimary",
          "tags": [
            "Image"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Primary image set successfully"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Unauthorized"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/images/list": {
        "get": {
          "operationId": "image.list",
          "tags": [
            "Image"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "images": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "images"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/interests": {
        "get": {
          "operationId": "interestApi.index",
          "tags": [
            "InterestApi"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/jobs": {
        "get": {
          "operationId": "jobApi.index",
          "summary": "Get all active jobs",
          "tags": [
            "JobApi"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/languages": {
        "get": {
          "operationId": "languageApi.index",
          "tags": [
            "LanguageApi"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/likes/like": {
        "post": {
          "operationId": "like.like",
          "description": "⚠️ Cannot generate request documentation: Undefined variable $userId",
          "tags": [
            "Like"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "enum": [
                          "It's a match!",
                          "Like sent"
                        ]
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "like": {
                            "type": "string"
                          },
                          "is_match": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "like",
                          "is_match"
                        ]
                      }
                    },
                    "required": [
                      "success",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Already matched"
                          }
                        },
                        "required": [
                          "success",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Already liked this user"
                          }
                        },
                        "required": [
                          "success",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Cannot like this user"
                          }
                        },
                        "required": [
                          "success",
                          "message"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "success",
                      "errors"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Something went wrong"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "success",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/likes/dislike": {
        "post": {
          "operationId": "like.dislike",
          "summary": "Send a dislike to another user",
          "tags": [
            "Like"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "target_user_id": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "target_user_id"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "User disliked successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "dislike_user_id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "dislike_user_id"
                        ]
                      }
                    },
                    "required": [
                      "success",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "A dislike already exists between you and this user"
                      }
                    },
                    "required": [
                      "success",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation error"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "success",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Something went wrong"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "success",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/likes/superlike": {
        "post": {
          "operationId": "like.superlike",
          "summary": "Send a superlike to another user",
          "tags": [
            "Like"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "target_user_id": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "target_user_id"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Superlike sent successfully! You can now chat with this user."
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "superlike": {
                                "type": "string"
                              },
                              "usage_type": {
                                "type": "string"
                              },
                              "pack_id": {
                                "type": "string"
                              },
                              "superlike_info": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "superlike",
                              "usage_type",
                              "pack_id",
                              "superlike_info"
                            ]
                          }
                        },
                        "required": [
                          "success",
                          "message",
                          "data"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "It's a match!"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "is_match": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "is_match"
                            ]
                          }
                        },
                        "required": [
                          "success",
                          "message",
                          "data"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "You are already matched with this user"
                          }
                        },
                        "required": [
                          "success",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "You have already performed an action on this user"
                          }
                        },
                        "required": [
                          "success",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "You cannot superlike this user"
                          }
                        },
                        "required": [
                          "success",
                          "message"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "You have no superlikes remaining. Purchase extra superlikes or wait for daily reset."
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "superlike_info": {
                            "type": "string"
                          },
                          "purchase_required": {
                            "type": "boolean"
                          }
                        },
                        "required": [
                          "superlike_info",
                          "purchase_required"
                        ]
                      }
                    },
                    "required": [
                      "success",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation error"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "success",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Something went wrong"
                          },
                          "error": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "success",
                          "message",
                          "error"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Failed to use superlike. Please try again."
                          }
                        },
                        "required": [
                          "success",
                          "message"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/likes/respond": {
        "post": {
          "operationId": "like.respondToLike",
          "summary": "Respond to a like (like back or dislike)",
          "tags": [
            "Like"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "like_id": {
                      "type": "integer"
                    },
                    "response": {
                      "type": "string",
                      "enum": [
                        "like",
                        "dislike"
                      ]
                    }
                  },
                  "required": [
                    "like_id",
                    "response"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Response recorded successfully"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "original_like": {
                                "type": "string"
                              },
                              "reciprocal_dislike": {
                                "type": "string"
                              },
                              "is_match": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "original_like",
                              "reciprocal_dislike",
                              "is_match"
                            ]
                          }
                        },
                        "required": [
                          "success",
                          "message",
                          "data"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "success": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "It's a match!"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "original_like": {
                                "type": "string"
                              },
                              "reciprocal_like": {
                                "type": "string"
                              },
                              "is_match": {
                                "type": "boolean"
                              }
                            },
                            "required": [
                              "original_like",
                              "reciprocal_like",
                              "is_match"
                            ]
                          }
                        },
                        "required": [
                          "success",
                          "message",
                          "data"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Like not found or already responded to"
                      }
                    },
                    "required": [
                      "success",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation error"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "success",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Something went wrong"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "success",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/likes/matches": {
        "get": {
          "operationId": "like.getMatches",
          "summary": "Get user's matches",
          "tags": [
            "Like"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "matches": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "matches"
                        ]
                      }
                    },
                    "required": [
                      "success",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/likes/pending": {
        "get": {
          "operationId": "like.getPendingLikes",
          "summary": "Get pending likes (likes waiting for response)",
          "tags": [
            "Like"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "pending_likes": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "pending_likes"
                        ]
                      }
                    },
                    "required": [
                      "success",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/likes/superlike-history": {
        "get": {
          "operationId": "like.getSuperlikeHistory",
          "summary": "Get superlike usage history",
          "tags": [
            "Like"
          ],
          "parameters": [
            {
              "name": "days",
              "in": "query",
              "schema": {
                "type": "string",
                "default": 7
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "usage_history": {
                            "type": "string"
                          },
                          "total_used": {
                            "type": "string"
                          },
                          "days_requested": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "usage_history",
                          "total_used",
                          "days_requested"
                        ]
                      }
                    },
                    "required": [
                      "success",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/matching/matches": {
        "get": {
          "operationId": "matching.getMatches",
          "summary": "Get matched profiles based on user preferences",
          "tags": [
            "Matching"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "matches": {
                            "type": "string"
                          },
                          "total_matches": {
                            "type": "string"
                          },
                          "view_limit": {
                            "type": "object",
                            "properties": {
                              "daily_limit": {
                                "type": "integer",
                                "enum": [
                                  20,
                                  200,
                                  100,
                                  50
                                ]
                              },
                              "plan": {
                                "anyOf": [
                                  {
                                    "type": "string"
                                  },
                                  {
                                    "type": "string",
                                    "enum": [
                                      "No Plan"
                                    ]
                                  }
                                ]
                              },
                              "views_remaining": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "daily_limit",
                              "plan",
                              "views_remaining"
                            ]
                          }
                        },
                        "required": [
                          "matches",
                          "total_matches",
                          "view_limit"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "429": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "You have reached your daily profile view limit"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "limit": {
                            "type": "integer",
                            "enum": [
                              20,
                              200,
                              100,
                              50
                            ]
                          },
                          "plan": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "No Plan"
                                ]
                              }
                            ]
                          }
                        },
                        "required": [
                          "limit",
                          "plan"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/matching/nearby-suggestions": {
        "get": {
          "operationId": "matching.getNearbySuggestions",
          "tags": [
            "Matching"
          ],
          "parameters": [
            {
              "name": "latitude",
              "in": "query",
              "description": "default to 50 km if not set",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "suggestions": {
                            "type": "string"
                          },
                          "total_suggestions": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "suggestions",
                          "total_suggestions"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Latitude and longitude are required."
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/matching/debug": {
        "get": {
          "operationId": "matching.debugMatches",
          "summary": "Debug endpoint to test matching logic",
          "tags": [
            "Matching"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "current_user": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "gender": {
                                "type": "string"
                              },
                              "preferred_genders": {
                                "type": "string"
                              },
                              "interests": {
                                "type": "string"
                              },
                              "languages": {
                                "type": "string"
                              },
                              "relation_goals": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              },
                              "country": {
                                "type": "string"
                              },
                              "jobs": {
                                "type": "string"
                              },
                              "educations": {
                                "type": "string"
                              },
                              "music_genres": {
                                "type": "string"
                              },
                              "smoke": {
                                "type": "string"
                              },
                              "gym": {
                                "type": "string"
                              },
                              "drink": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "gender",
                              "preferred_genders",
                              "interests",
                              "languages",
                              "relation_goals",
                              "city",
                              "country",
                              "jobs",
                              "educations",
                              "music_genres",
                              "smoke",
                              "gym",
                              "drink"
                            ]
                          },
                          "total_users_in_system": {
                            "type": "string"
                          },
                          "potential_matches": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "minItems": 0,
                            "maxItems": 0,
                            "additionalItems": false
                          }
                        },
                        "required": [
                          "current_user",
                          "total_users_in_system",
                          "potential_matches"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/matching/test": {
        "get": {
          "operationId": "matching.testUserData",
          "summary": "Simple test endpoint to check user data",
          "tags": [
            "Matching"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "current_user": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "gender": {
                                "type": "integer"
                              },
                              "preferred_gender": {
                                "type": "integer"
                              },
                              "min_age_preference": {
                                "type": "string"
                              },
                              "max_age_preference": {
                                "type": "string"
                              },
                              "birth_date": {
                                "type": "string"
                              },
                              "age": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "gender",
                              "preferred_gender",
                              "min_age_preference",
                              "max_age_preference",
                              "birth_date",
                              "age"
                            ]
                          },
                          "all_users_count": {
                            "type": "string"
                          },
                          "potential_matches_by_gender": {
                            "type": "string"
                          },
                          "potential_matches_by_preference": {
                            "type": "string"
                          },
                          "mutual_matches": {
                            "type": "string"
                          },
                          "sample_users": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "current_user",
                          "all_users_count",
                          "potential_matches_by_gender",
                          "potential_matches_by_preference",
                          "mutual_matches",
                          "sample_users"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/matching/advanced": {
        "get": {
          "operationId": "matching.getAdvancedMatches",
          "summary": "Get advanced matches using the new matching algorithm",
          "tags": [
            "Matching"
          ],
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "string",
                "default": 20
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "matches": {
                            "type": "string"
                          },
                          "total": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "matches",
                          "total"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to get advanced matches"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/matching/compatibility-score": {
        "get": {
          "operationId": "matching.getCompatibilityScore",
          "summary": "Get compatibility score between two users",
          "tags": [
            "Matching"
          ],
          "parameters": [
            {
              "name": "target_user_id",
              "in": "query",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Target user ID is required"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Target user not found"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to calculate compatibility score"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/matching/ai-suggestions": {
        "get": {
          "operationId": "matching.getAIMatchSuggestions",
          "summary": "Get AI-powered match suggestions",
          "tags": [
            "Matching"
          ],
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "string",
                "default": 10
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "suggestions": {
                            "type": "string"
                          },
                          "total": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "suggestions",
                          "total"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to get AI match suggestions"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/matching/location-based": {
        "get": {
          "operationId": "matching.getLocationBasedMatches",
          "summary": "Get location-based matches",
          "tags": [
            "Matching"
          ],
          "parameters": [
            {
              "name": "radius",
              "in": "query",
              "schema": {
                "type": "string",
                "default": 50
              }
            },
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "string",
                "default": 20
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "matches": {
                            "type": "string"
                          },
                          "total": {
                            "type": "string"
                          },
                          "radius_km": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "matches",
                          "total",
                          "radius_km"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to get location-based matches"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/music-genres": {
        "get": {
          "operationId": "musicGenreApi.index",
          "tags": [
            "MusicGenreApi"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/mutes/mute": {
        "post": {
          "operationId": "mute.muteUser",
          "summary": "Mute a matched user",
          "tags": [
            "Mute"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_id": {
                      "type": "integer"
                    },
                    "mute_type": {
                      "type": "string",
                      "enum": [
                        "all",
                        "stories",
                        "feeds"
                      ]
                    },
                    "reason": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "maxLength": 500
                    }
                  },
                  "required": [
                    "user_id",
                    "mute_type"
                  ]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "User muted successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "mute": {
                            "type": "string"
                          },
                          "mute_type": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "mute",
                          "mute_type"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "User is already muted"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "You cannot mute yourself"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "You can only mute matched users"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation error"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to mute user"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/mutes/unmute": {
        "delete": {
          "operationId": "mute.unmuteUser",
          "summary": "Unmute a user",
          "tags": [
            "Mute"
          ],
          "parameters": [
            {
              "name": "user_id",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "User unmuted successfully"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "User is not muted"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation error"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to unmute user"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/mutes/list": {
        "get": {
          "operationId": "mute.getMutedUsers",
          "summary": "Get list of muted users",
          "tags": [
            "Mute"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "muted_users": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "muted_users"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/mutes/settings": {
        "put": {
          "operationId": "mute.updateMuteSettings",
          "summary": "Update mute settings",
          "tags": [
            "Mute"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_id": {
                      "type": "integer"
                    },
                    "mute_type": {
                      "type": "string",
                      "enum": [
                        "all",
                        "stories",
                        "feeds",
                        "posts"
                      ]
                    },
                    "reason": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "maxLength": 500
                    }
                  },
                  "required": [
                    "user_id",
                    "mute_type"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Mute settings updated successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "mute": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "mute"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "User is not muted"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation error"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to update mute settings"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/mutes/check": {
        "get": {
          "operationId": "mute.checkMuteStatus",
          "summary": "Check if a user is muted",
          "tags": [
            "Mute"
          ],
          "parameters": [
            {
              "name": "user_id",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "is_muted": {
                            "type": "boolean"
                          },
                          "mute_type": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "reason": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "muted_at": {
                            "type": [
                              "string",
                              "null"
                            ]
                          }
                        },
                        "required": [
                          "is_muted",
                          "mute_type",
                          "reason",
                          "muted_at"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation error"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/notifications": {
        "get": {
          "operationId": "notification.index",
          "summary": "Get all notifications for the authenticated user",
          "tags": [
            "Notification"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "notifications": {
                            "type": "string"
                          },
                          "unread_count": {
                            "type": "integer",
                            "example": 0
                          }
                        },
                        "required": [
                          "notifications",
                          "unread_count"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        },
        "delete": {
          "operationId": "notification.destroyAll",
          "summary": "Delete all notifications",
          "tags": [
            "Notification"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "All notifications deleted successfully"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/notifications/unread-count": {
        "get": {
          "operationId": "notification.unreadCount",
          "summary": "Get unread notifications count",
          "tags": [
            "Notification"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "unread_count": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "unread_count"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/notifications/{id}/read": {
        "post": {
          "operationId": "notification.markAsRead",
          "summary": "Mark a notification as read",
          "tags": [
            "Notification"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Notification marked as read"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Notification not found"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/notifications/read-all": {
        "post": {
          "operationId": "notification.markAllAsRead",
          "summary": "Mark all notifications as read",
          "tags": [
            "Notification"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "All notifications marked as read"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/notifications/{id}": {
        "delete": {
          "operationId": "notification.destroy",
          "summary": "Delete a notification",
          "tags": [
            "Notification"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Notification deleted successfully"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Notification not found"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/stripe/payment-intent": {
        "post": {
          "operationId": "payment.createIntent",
          "tags": [
            "Payment"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sub_plan_id": {
                      "type": "integer"
                    },
                    "currency": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "sub_plan_id"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "client_secret": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "client_secret"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        }
      },
      "/stripe/checkout": {
        "post": {
          "operationId": "payment.createCheckout",
          "tags": [
            "Payment"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sub_plan_id": {
                      "type": "integer"
                    },
                    "success_url": {
                      "type": "string",
                      "format": "uri"
                    },
                    "cancel_url": {
                      "type": "string",
                      "format": "uri"
                    },
                    "currency": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "sub_plan_id",
                    "success_url",
                    "cancel_url"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "url"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        }
      },
      "/stripe/subscription": {
        "post": {
          "operationId": "payment.createSubscription",
          "tags": [
            "Payment"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sub_plan_id": {
                      "type": "integer"
                    },
                    "currency": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "sub_plan_id"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Subscription created successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "subscription_id": {
                            "type": "string"
                          },
                          "client_secret": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "subscription_id",
                          "client_secret",
                          "status"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to create subscription"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/stripe/subscription/{subscriptionId}": {
        "delete": {
          "operationId": "payment.cancelSubscription",
          "tags": [
            "Payment"
          ],
          "parameters": [
            {
              "name": "subscriptionId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Subscription cancelled successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "subscription_id": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "canceled_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "subscription_id",
                          "status",
                          "canceled_at"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to cancel subscription"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/stripe/refund": {
        "post": {
          "operationId": "payment.createRefund",
          "tags": [
            "Payment"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "payment_intent_id": {
                      "type": "string"
                    },
                    "amount": {
                      "type": [
                        "number",
                        "null"
                      ],
                      "minimum": 0
                    },
                    "reason": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "enum": [
                        "duplicate",
                        "fraudulent",
                        "requested_by_customer"
                      ]
                    }
                  },
                  "required": [
                    "payment_intent_id"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Refund created successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "refund_id": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "reason": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "refund_id",
                          "amount",
                          "status",
                          "reason"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to create refund"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/stripe/analytics": {
        "get": {
          "operationId": "payment.getAnalytics",
          "tags": [
            "Payment"
          ],
          "parameters": [
            {
              "name": "start_date",
              "in": "query",
              "schema": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              }
            },
            {
              "name": "end_date",
              "in": "query",
              "schema": {
                "type": [
                  "string",
                  "null"
                ],
                "format": "date-time"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to get analytics"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/stripe/webhook": {
        "post": {
          "operationId": "payment.handleStripeWebhook",
          "tags": [
            "Payment"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "example": "Webhook handled"
                      },
                      {
                        "type": "string",
                        "example": "Sub plan not found"
                      },
                      {
                        "type": "string",
                        "example": "User not found"
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string",
                    "example": "Invalid payload or signature"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/payment-methods": {
        "get": {
          "operationId": "paymentList.index",
          "summary": "Get list of all active payment methods",
          "tags": [
            "PaymentList"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/payment-methods/{id}": {
        "get": {
          "operationId": "paymentList.show",
          "summary": "Get payment method details by ID",
          "tags": [
            "PaymentList"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "icon_url": {
                            "type": [
                              "string",
                              "null"
                            ]
                          },
                          "type": {
                            "type": "string"
                          },
                          "currency": {
                            "type": "string"
                          },
                          "min_amount": {
                            "type": "number"
                          },
                          "max_amount": {
                            "type": "number"
                          },
                          "instructions": {
                            "type": "string"
                          },
                          "additional_data": {
                            "type": "string"
                          },
                          "processing_time": {
                            "type": "string"
                          },
                          "fees": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "title",
                          "description",
                          "icon_url",
                          "type",
                          "currency",
                          "min_amount",
                          "max_amount",
                          "instructions",
                          "additional_data",
                          "processing_time",
                          "fees"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/payment-methods/currency/{currency}": {
        "get": {
          "operationId": "paymentList.getByCurrency",
          "summary": "Get payment methods by currency",
          "tags": [
            "PaymentList"
          ],
          "parameters": [
            {
              "name": "currency",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/payment-methods/type/{type}": {
        "get": {
          "operationId": "paymentList.getByType",
          "summary": "Get payment methods by type",
          "tags": [
            "PaymentList"
          ],
          "parameters": [
            {
              "name": "type",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/payment-methods/validate-amount": {
        "post": {
          "operationId": "paymentList.validateAmount",
          "summary": "Validate payment method for given amount",
          "tags": [
            "PaymentList"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "payment_method_id": {
                      "type": "integer"
                    },
                    "amount": {
                      "type": "number",
                      "minimum": 0
                    }
                  },
                  "required": [
                    "payment_method_id",
                    "amount"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "is_valid": {
                            "type": "string"
                          },
                          "amount": {
                            "type": "string"
                          },
                          "fees": {
                            "type": "string"
                          },
                          "total_amount": {
                            "type": "string"
                          },
                          "currency": {
                            "type": "string"
                          },
                          "min_amount": {
                            "type": "number"
                          },
                          "max_amount": {
                            "type": "number"
                          },
                          "message": {
                            "type": "string",
                            "enum": [
                              "Amount is valid",
                              "Amount is out of range"
                            ]
                          }
                        },
                        "required": [
                          "is_valid",
                          "amount",
                          "fees",
                          "total_amount",
                          "currency",
                          "min_amount",
                          "max_amount",
                          "message"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation failed"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/plan-purchase-actions": {
        "get": {
          "operationId": "planPurchaseAction.index",
          "summary": "Display a listing of plan purchase actions",
          "tags": [
            "PlanPurchaseAction"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        },
        "post": {
          "operationId": "planPurchaseAction.store",
          "summary": "Store a new plan purchase action",
          "tags": [
            "PlanPurchaseAction"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user_id": {
                      "type": "integer"
                    },
                    "user_data": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "amount": {
                      "type": "number",
                      "minimum": 0
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "success",
                        "failed"
                      ]
                    },
                    "stripe_session_id": {
                      "type": "string"
                    },
                    "day": {
                      "type": "integer",
                      "minimum": 1
                    }
                  },
                  "required": [
                    "user_id",
                    "user_data",
                    "name",
                    "email",
                    "amount",
                    "status",
                    "stripe_session_id",
                    "day"
                  ]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Plan purchase action recorded successfully"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation failed"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/plan-purchase-actions/statistics": {
        "get": {
          "operationId": "planPurchaseAction.getStatistics",
          "summary": "Get purchase action statistics",
          "tags": [
            "PlanPurchaseAction"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "total_transactions": {
                            "type": "string"
                          },
                          "successful_transactions": {
                            "type": "string"
                          },
                          "failed_transactions": {
                            "type": "string"
                          },
                          "pending_transactions": {
                            "type": "string"
                          },
                          "total_amount": {
                            "type": "string"
                          },
                          "today_transactions": {
                            "type": "string"
                          },
                          "today_amount": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "total_transactions",
                          "successful_transactions",
                          "failed_transactions",
                          "pending_transactions",
                          "total_amount",
                          "today_transactions",
                          "today_amount"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/plan-purchase-actions/today": {
        "get": {
          "operationId": "planPurchaseAction.getTodayActions",
          "summary": "Get today's purchase actions",
          "tags": [
            "PlanPurchaseAction"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/plan-purchase-actions/status": {
        "get": {
          "operationId": "planPurchaseAction.getActionsByStatus",
          "summary": "Get purchase actions by status",
          "tags": [
            "PlanPurchaseAction"
          ],
          "parameters": [
            {
              "name": "status",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string",
                "enum": [
                  "pending",
                  "success",
                  "failed"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Invalid status"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/plan-purchase-actions/user/{userId}": {
        "get": {
          "operationId": "planPurchaseAction.getUserActions",
          "summary": "Get purchase actions for a specific user",
          "tags": [
            "PlanPurchaseAction"
          ],
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/plan-purchase-actions/{id}": {
        "get": {
          "operationId": "planPurchaseAction.show",
          "summary": "Get a specific purchase action",
          "tags": [
            "PlanPurchaseAction"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "404": {
              "$ref": "#/components/responses/ModelNotFoundException"
            }
          }
        }
      },
      "/plan-purchase-actions/{id}/status": {
        "patch": {
          "operationId": "planPurchaseAction.updateStatus",
          "summary": "Update the status of a plan purchase action",
          "tags": [
            "PlanPurchaseAction"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "enum": [
                        "pending",
                        "success",
                        "failed"
                      ]
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Plan purchase action status updated successfully"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation failed"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/plan-purchases": {
        "get": {
          "operationId": "planPurchaseHistory.index",
          "summary": "Display a listing of plan purchase histories",
          "tags": [
            "PlanPurchaseHistory"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        },
        "post": {
          "operationId": "planPurchaseHistory.store",
          "summary": "Store a newly created plan purchase history",
          "tags": [
            "PlanPurchaseHistory"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sub_plan_id": {
                      "type": "integer"
                    },
                    "trans_id": {
                      "type": "string"
                    },
                    "p_method_id": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "sub_plan_id",
                    "trans_id",
                    "p_method_id"
                  ]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Plan purchase history created successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "history": {
                            "type": "string"
                          },
                          "sub_plan": {
                            "type": "string"
                          },
                          "plan": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "history",
                          "sub_plan",
                          "plan"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Banned users cannot purchase plans"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "404": {
              "$ref": "#/components/responses/ModelNotFoundException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "Invalid plan upgrade. You can only upgrade to a plan with more features and longer duration."
                          },
                          "details": {
                            "type": "string",
                            "example": "The new plan must have at least the same features as your current plan and a longer duration."
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "details"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "Validation failed"
                          },
                          "errors": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "errors"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/plan-purchases/history": {
        "get": {
          "operationId": "planPurchaseHistory.getUserHistory",
          "tags": [
            "PlanPurchaseHistory"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/plan-purchases/active": {
        "get": {
          "operationId": "planPurchaseHistory.getActivePlans",
          "tags": [
            "PlanPurchaseHistory"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/plan-purchases/expired": {
        "get": {
          "operationId": "planPurchaseHistory.getExpiredPlans",
          "tags": [
            "PlanPurchaseHistory"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/plan-purchases/upgrade-options": {
        "get": {
          "operationId": "planPurchaseHistory.getUpgradeOptions",
          "summary": "Get upgrade options for the current user",
          "tags": [
            "PlanPurchaseHistory"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "current_plan": {
                            "type": "object",
                            "properties": {
                              "plan": {
                                "type": "string"
                              },
                              "sub_plan": {
                                "type": "string"
                              },
                              "days_remaining": {
                                "type": "string"
                              },
                              "amount_paid": {
                                "type": "string"
                              },
                              "expire_date": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "plan",
                              "sub_plan",
                              "days_remaining",
                              "amount_paid",
                              "expire_date"
                            ]
                          },
                          "available_upgrades": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "current_plan",
                          "available_upgrades"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "Current sub-plan not found. Please contact support."
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "No active plan found"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/plan-purchases/{id}": {
        "get": {
          "operationId": "planPurchaseHistory.show",
          "summary": "Display the specified plan purchase history",
          "tags": [
            "PlanPurchaseHistory"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Unauthorized access"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/preferred-genders": {
        "get": {
          "operationId": "preferredGenderApi.index",
          "tags": [
            "PreferredGenderApi"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/profile": {
        "get": {
          "operationId": "profile.show",
          "tags": [
            "Profile"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/profile/badge/info": {
        "get": {
          "operationId": "profile.getBadgeInfo",
          "tags": [
            "Profile"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "liked_by_count": {
                            "type": "string"
                          },
                          "liked_by_users": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "liked_by_count",
                          "liked_by_users"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/profile/{id}": {
        "get": {
          "operationId": "profile.showUser",
          "tags": [
            "Profile"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "You cannot view this profile."
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "404": {
              "$ref": "#/components/responses/ModelNotFoundException"
            }
          }
        }
      },
      "/profile/{id}/feeds": {
        "get": {
          "operationId": "profile.getUserFeeds",
          "summary": "Get user's feeds when visiting their profile (only for matched users)",
          "tags": [
            "Profile"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "You can only view feeds of matched users"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/profile/update": {
        "post": {
          "operationId": "profile.update",
          "description": "⚠️ Cannot generate request documentation: Undefined variable $user",
          "tags": [
            "Profile"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Profile updated successfully"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation failed"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to update profile"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/profile/by-job/{jobId}": {
        "get": {
          "operationId": "profile.getUsersByJob",
          "summary": "Get users by job ID",
          "tags": [
            "Profile"
          ],
          "parameters": [
            {
              "name": "jobId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/profile/by-language/{languageId}": {
        "get": {
          "operationId": "profile.getUsersByLanguage",
          "summary": "Get users by language ID",
          "tags": [
            "Profile"
          ],
          "parameters": [
            {
              "name": "languageId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/profile/by-relation-goal/{relationGoalId}": {
        "get": {
          "operationId": "profile.getUsersByRelationGoal",
          "summary": "Get users by relation goal ID",
          "tags": [
            "Profile"
          ],
          "parameters": [
            {
              "name": "relationGoalId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/profile/by-interest/{interestId}": {
        "get": {
          "operationId": "profile.getUsersByInterest",
          "summary": "Get users by interest ID",
          "tags": [
            "Profile"
          ],
          "parameters": [
            {
              "name": "interestId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/profile/by-music-genre/{musicGenreId}": {
        "get": {
          "operationId": "profile.getUsersByMusicGenre",
          "summary": "Get users by music genre ID",
          "tags": [
            "Profile"
          ],
          "parameters": [
            {
              "name": "musicGenreId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/profile/by-education/{educationId}": {
        "get": {
          "operationId": "profile.getUsersByEducation",
          "summary": "Get users by education ID",
          "tags": [
            "Profile"
          ],
          "parameters": [
            {
              "name": "educationId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/profile/by-preferred-gender/{preferredGenderId}": {
        "get": {
          "operationId": "profile.getUsersByPreferredGender",
          "summary": "Get users by preferred gender ID",
          "tags": [
            "Profile"
          ],
          "parameters": [
            {
              "name": "preferredGenderId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/profile/by-gender/{genderId}": {
        "get": {
          "operationId": "profile.getUsersByGender",
          "summary": "Get users by gender ID",
          "tags": [
            "Profile"
          ],
          "parameters": [
            {
              "name": "genderId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/profile-pictures/upload": {
        "post": {
          "operationId": "profilePicture.upload",
          "tags": [
            "ProfilePicture"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "image": {
                      "type": "string",
                      "format": "binary",
                      "contentMediaType": "application/octet-stream",
                      "maxLength": 5120
                    },
                    "is_primary": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "image"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Profile picture uploaded successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "image": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "sizes": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "sizes"
                            ]
                          }
                        },
                        "required": [
                          "image"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "Image dimensions too small (min 100x100)"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "Validation failed"
                          },
                          "errors": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "errors"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/profile-pictures/{id}": {
        "delete": {
          "operationId": "profilePicture.delete",
          "tags": [
            "ProfilePicture"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Profile picture deleted successfully"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Cannot delete the only profile picture"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/profile-pictures/{id}/set-primary": {
        "post": {
          "operationId": "profilePicture.setPrimary",
          "tags": [
            "ProfilePicture"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Primary profile picture set successfully"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Unauthorized"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Image not found"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/profile-pictures/list": {
        "get": {
          "operationId": "profilePicture.list",
          "tags": [
            "ProfilePicture"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "images": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "images"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/verification/status": {
        "get": {
          "operationId": "profileVerification.getStatus",
          "summary": "Get user's verification status",
          "tags": [
            "ProfileVerification"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "verification_status": {
                            "type": "string"
                          },
                          "verification_badge": {
                            "type": "string"
                          },
                          "can_submit_photo": {
                            "type": "string"
                          },
                          "can_submit_id": {
                            "type": "string"
                          },
                          "can_submit_video": {
                            "type": "string"
                          },
                          "pending_verifications": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "verification_status",
                          "verification_badge",
                          "can_submit_photo",
                          "can_submit_id",
                          "can_submit_video",
                          "pending_verifications"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/verification/guidelines": {
        "get": {
          "operationId": "profileVerification.getGuidelines",
          "summary": "Get verification guidelines",
          "tags": [
            "ProfileVerification"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "photo_verification": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string",
                                "example": "Take a clear photo of yourself holding a piece of paper with your username and today's date"
                              },
                              "requirements": {
                                "type": "array",
                                "prefixItems": [
                                  {
                                    "type": "string",
                                    "example": "Photo must be clear and well-lit"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Your face must be clearly visible"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Paper must show your username and current date"
                                  },
                                  {
                                    "type": "string",
                                    "example": "No filters or heavy editing"
                                  },
                                  {
                                    "type": "string",
                                    "example": "File size: Maximum 10MB"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Formats: JPEG, PNG, JPG, WebP"
                                  }
                                ],
                                "minItems": 6,
                                "maxItems": 6,
                                "additionalItems": false
                              }
                            },
                            "required": [
                              "description",
                              "requirements"
                            ]
                          },
                          "id_verification": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string",
                                "example": "Upload a photo of your government-issued ID (passport, driver's license, etc.)"
                              },
                              "requirements": {
                                "type": "array",
                                "prefixItems": [
                                  {
                                    "type": "string",
                                    "example": "ID must be clearly visible and readable"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Personal information can be partially covered for privacy"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Photo must show the full ID document"
                                  },
                                  {
                                    "type": "string",
                                    "example": "File size: Maximum 10MB"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Formats: JPEG, PNG, JPG, PDF"
                                  }
                                ],
                                "minItems": 5,
                                "maxItems": 5,
                                "additionalItems": false
                              },
                              "privacy_note": {
                                "type": "string",
                                "example": "Your ID information is encrypted and only used for verification purposes. We do not store or share your personal information."
                              }
                            },
                            "required": [
                              "description",
                              "requirements",
                              "privacy_note"
                            ]
                          },
                          "video_verification": {
                            "type": "object",
                            "properties": {
                              "description": {
                                "type": "string",
                                "example": "Record a short video saying your username and a specific phrase"
                              },
                              "requirements": {
                                "type": "array",
                                "prefixItems": [
                                  {
                                    "type": "string",
                                    "example": "Video must be at least 5 seconds long"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Your face must be clearly visible"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Speak clearly and naturally"
                                  },
                                  {
                                    "type": "string",
                                    "example": "No filters or heavy editing"
                                  },
                                  {
                                    "type": "string",
                                    "example": "File size: Maximum 50MB"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Formats: MP4, MOV, AVI"
                                  }
                                ],
                                "minItems": 6,
                                "maxItems": 6,
                                "additionalItems": false
                              }
                            },
                            "required": [
                              "description",
                              "requirements"
                            ]
                          }
                        },
                        "required": [
                          "photo_verification",
                          "id_verification",
                          "video_verification"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/verification/history": {
        "get": {
          "operationId": "profileVerification.getHistory",
          "summary": "Get verification history",
          "tags": [
            "ProfileVerification"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "verifications": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "verifications"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/verification/submit-photo": {
        "post": {
          "operationId": "profileVerification.submitPhoto",
          "summary": "Submit photo verification",
          "tags": [
            "ProfileVerification"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "photo": {
                      "type": "string",
                      "format": "binary",
                      "contentMediaType": "application/octet-stream",
                      "maxLength": 10240
                    }
                  },
                  "required": [
                    "photo"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Photo verification submitted successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "verification_id": {
                            "type": "string"
                          },
                          "submitted_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "verification_id",
                          "submitted_at"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Photo verification already submitted or approved"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation failed"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to submit photo verification"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/verification/submit-id": {
        "post": {
          "operationId": "profileVerification.submitId",
          "summary": "Submit ID verification",
          "tags": [
            "ProfileVerification"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id_document": {
                      "type": "string",
                      "format": "binary",
                      "contentMediaType": "application/octet-stream",
                      "maxLength": 10240
                    }
                  },
                  "required": [
                    "id_document"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "ID verification submitted successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "verification_id": {
                            "type": "string"
                          },
                          "submitted_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "verification_id",
                          "submitted_at"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "ID verification already submitted or approved"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation failed"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to submit ID verification"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/verification/submit-video": {
        "post": {
          "operationId": "profileVerification.submitVideo",
          "summary": "Submit video verification",
          "tags": [
            "ProfileVerification"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "video": {
                      "type": "string",
                      "format": "binary",
                      "contentMediaType": "application/octet-stream",
                      "maxLength": 51200
                    }
                  },
                  "required": [
                    "video"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Video verification submitted successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "verification_id": {
                            "type": "string"
                          },
                          "submitted_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "verification_id",
                          "submitted_at"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Video verification already submitted or approved"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation failed"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to submit video verification"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/verification/cancel/{verificationId}": {
        "delete": {
          "operationId": "profileVerification.cancelVerification",
          "summary": "Cancel pending verification",
          "tags": [
            "ProfileVerification"
          ],
          "parameters": [
            {
              "name": "verificationId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Verification cancelled successfully"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Verification not found or cannot be cancelled"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to cancel verification"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/profile-wizard/current-step": {
        "get": {
          "operationId": "profileWizard.getCurrentStep",
          "summary": "Get the current step of profile completion",
          "tags": [
            "ProfileWizard"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "current_step": {
                            "anyOf": [
                              {
                                "type": "string"
                              },
                              {
                                "type": "string",
                                "enum": [
                                  "final"
                                ]
                              }
                            ]
                          },
                          "total_steps": {
                            "type": "string"
                          },
                          "missing_fields": {
                            "type": "string"
                          },
                          "completion_percentage": {
                            "type": "string"
                          },
                          "step_data": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "current_step",
                          "total_steps",
                          "missing_fields",
                          "completion_percentage",
                          "step_data"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/profile-wizard/step-options/{step}": {
        "get": {
          "operationId": "profileWizard.getStepOptions",
          "summary": "Get all available options for a specific step",
          "tags": [
            "ProfileWizard"
          ],
          "parameters": [
            {
              "name": "step",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "max_photos": {
                            "type": "integer",
                            "example": 6
                          },
                          "allowed_types": {
                            "type": "array",
                            "prefixItems": [
                              {
                                "type": "string",
                                "example": "image/jpeg"
                              },
                              {
                                "type": "string",
                                "example": "image/png"
                              },
                              {
                                "type": "string",
                                "example": "image/webp"
                              }
                            ],
                            "minItems": 3,
                            "maxItems": 3,
                            "additionalItems": false
                          },
                          "max_size": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "max_photos",
                          "allowed_types",
                          "max_size"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/profile-wizard/save-step/{step}": {
        "post": {
          "operationId": "profileWizard.saveStep",
          "description": "⚠️ Cannot generate request documentation: Dedoc\\Scramble\\Support\\OperationExtensions\\ParameterExtractor\\ValidateCallParametersExtractor::rules(): Return value must be of type array, PhpParser\\Node\\Expr\\Variable returned",
          "summary": "Save step data",
          "tags": [
            "ProfileWizard"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "success"
                          },
                          "message": {
                            "type": "string",
                            "example": "Step saved successfully"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "is_complete": {
                                "type": "boolean"
                              },
                              "next_step": {
                                "type": [
                                  "string",
                                  "null"
                                ]
                              },
                              "completion_percentage": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "is_complete",
                              "next_step",
                              "completion_percentage"
                            ]
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "data"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "success"
                          },
                          "message": {
                            "type": "string",
                            "example": "Profile completed successfully!"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "is_complete": {
                                "type": "boolean"
                              },
                              "token": {
                                "type": "string"
                              },
                              "token_type": {
                                "type": "string",
                                "example": "Bearer"
                              },
                              "completion_percentage": {
                                "type": "integer",
                                "example": 100
                              }
                            },
                            "required": [
                              "is_complete",
                              "token",
                              "token_type",
                              "completion_percentage"
                            ]
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "data"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation failed"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to save step"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/relation-goals": {
        "get": {
          "operationId": "relationGoalApi.index",
          "tags": [
            "RelationGoalApi"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/reports": {
        "get": {
          "operationId": "report.index",
          "tags": [
            "Report"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "reports": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "reports"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to retrieve reports"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        },
        "post": {
          "operationId": "report.store",
          "tags": [
            "Report"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reason": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "description": {
                      "type": "string",
                      "maxLength": 1000
                    },
                    "evidence": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "maxLength": 1000
                    },
                    "reportable_type": {
                      "type": "string",
                      "enum": [
                        "user",
                        "feed",
                        "story",
                        "comment"
                      ]
                    },
                    "reportable_id": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "reason",
                    "description",
                    "reportable_type",
                    "reportable_id"
                  ]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Report submitted successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "report": {
                            "type": "string"
                          },
                          "reportable_type": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "report",
                          "reportable_type",
                          "message"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "You have already reported this item"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "You cannot report yourself"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Invalid reportable entity"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "boolean"
                          },
                          "message": {
                            "type": "string",
                            "example": "Validation error"
                          },
                          "errors": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "status",
                          "message",
                          "errors"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to submit report"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/reports/{id}": {
        "get": {
          "operationId": "report.show",
          "tags": [
            "Report"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "report": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "report"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to retrieve report details"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/safety/guidelines": {
        "get": {
          "operationId": "safety.getSafetyGuidelines",
          "summary": "Get safety guidelines",
          "tags": [
            "Safety"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "meeting_safety": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "example": "Meeting Safety Guidelines"
                              },
                              "guidelines": {
                                "type": "array",
                                "prefixItems": [
                                  {
                                    "type": "string",
                                    "example": "Always meet in public places for first meetings"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Tell a friend or family member about your plans"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Keep your personal information private initially"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Trust your instincts - if something feels wrong, leave"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Don't share financial information"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Use your own transportation to and from meetings"
                                  }
                                ],
                                "minItems": 6,
                                "maxItems": 6,
                                "additionalItems": false
                              }
                            },
                            "required": [
                              "title",
                              "guidelines"
                            ]
                          },
                          "online_safety": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "example": "Online Safety Guidelines"
                              },
                              "guidelines": {
                                "type": "array",
                                "prefixItems": [
                                  {
                                    "type": "string",
                                    "example": "Never share passwords or financial information"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Be cautious of requests for money or gifts"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Report suspicious behavior immediately"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Don't share intimate photos with people you haven't met"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Use the app's messaging system initially"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Block and report users who make you uncomfortable"
                                  }
                                ],
                                "minItems": 6,
                                "maxItems": 6,
                                "additionalItems": false
                              }
                            },
                            "required": [
                              "title",
                              "guidelines"
                            ]
                          },
                          "emergency_procedures": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "example": "Emergency Procedures"
                              },
                              "guidelines": {
                                "type": "array",
                                "prefixItems": [
                                  {
                                    "type": "string",
                                    "example": "Use the emergency alert feature if you feel unsafe"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Share your location with trusted contacts"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Call emergency services if needed"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Document any concerning behavior"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Report incidents through the app immediately"
                                  }
                                ],
                                "minItems": 5,
                                "maxItems": 5,
                                "additionalItems": false
                              }
                            },
                            "required": [
                              "title",
                              "guidelines"
                            ]
                          }
                        },
                        "required": [
                          "meeting_safety",
                          "online_safety",
                          "emergency_procedures"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/safety/emergency-contacts": {
        "get": {
          "operationId": "safety.getEmergencyContacts",
          "summary": "Get user's emergency contacts",
          "tags": [
            "Safety"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        },
        "post": {
          "operationId": "safety.addEmergencyContact",
          "summary": "Add emergency contact",
          "tags": [
            "Safety"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "phone": {
                      "type": "string"
                    },
                    "relationship": {
                      "type": "string",
                      "maxLength": 255
                    },
                    "is_primary": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "name",
                    "phone",
                    "relationship"
                  ]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Emergency contact added successfully"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Maximum number of emergency contacts (5) reached"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation failed"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/safety/emergency-alert": {
        "post": {
          "operationId": "safety.sendEmergencyAlert",
          "summary": "Send emergency alert",
          "tags": [
            "Safety"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "maxLength": 500
                    },
                    "alert_type": {
                      "type": "string",
                      "enum": [
                        "unsafe_meeting",
                        "harassment",
                        "emergency"
                      ]
                    },
                    "location": {
                      "type": "object",
                      "properties": {
                        "latitude": {
                          "type": "number"
                        },
                        "longitude": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "latitude",
                        "longitude"
                      ]
                    }
                  },
                  "required": [
                    "alert_type",
                    "location"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Emergency alert sent successfully"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation failed"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/safety/share-location": {
        "post": {
          "operationId": "safety.shareLocation",
          "summary": "Share location with emergency contacts",
          "tags": [
            "Safety"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "latitude": {
                      "type": "number"
                    },
                    "longitude": {
                      "type": "number"
                    },
                    "duration_minutes": {
                      "type": "integer",
                      "minimum": 5,
                      "maximum": 1440
                    },
                    "message": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "description": "5 minutes to 24 hours",
                      "maxLength": 500
                    }
                  },
                  "required": [
                    "latitude",
                    "longitude",
                    "duration_minutes"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Location shared successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "expires_at": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "expires_at"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation failed"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/safety/nearby-safe-places": {
        "get": {
          "operationId": "safety.getNearbySafePlaces",
          "summary": "Get nearby safe places",
          "tags": [
            "Safety"
          ],
          "parameters": [
            {
              "name": "latitude",
              "in": "query",
              "required": true,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "longitude",
              "in": "query",
              "required": true,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "radius_km",
              "in": "query",
              "schema": {
                "type": "integer",
                "minimum": 1,
                "maximum": 50
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation failed"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/safety/report": {
        "post": {
          "operationId": "safety.createReport",
          "summary": "Create safety report",
          "tags": [
            "Safety"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "reported_user_id": {
                      "type": "integer"
                    },
                    "report_type": {
                      "type": "string",
                      "enum": [
                        "harassment",
                        "inappropriate_content",
                        "fake_profile",
                        "spam",
                        "other"
                      ]
                    },
                    "description": {
                      "type": "string",
                      "maxLength": 1000
                    },
                    "evidence": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string",
                        "format": "uri"
                      }
                    }
                  },
                  "required": [
                    "reported_user_id",
                    "report_type",
                    "description"
                  ]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Report submitted successfully"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "You cannot report yourself"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation failed"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/safety/report-categories": {
        "get": {
          "operationId": "safety.getReportCategories",
          "summary": "Get report categories",
          "tags": [
            "Safety"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "harassment": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "example": "Harassment"
                              },
                              "description": {
                                "type": "string",
                                "example": "Unwanted, repeated, or threatening behavior"
                              },
                              "examples": {
                                "type": "array",
                                "prefixItems": [
                                  {
                                    "type": "string",
                                    "example": "Unwanted messages"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Stalking"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Threats"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Sexual harassment"
                                  }
                                ],
                                "minItems": 4,
                                "maxItems": 4,
                                "additionalItems": false
                              }
                            },
                            "required": [
                              "title",
                              "description",
                              "examples"
                            ]
                          },
                          "inappropriate_content": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "example": "Inappropriate Content"
                              },
                              "description": {
                                "type": "string",
                                "example": "Content that violates community guidelines"
                              },
                              "examples": {
                                "type": "array",
                                "prefixItems": [
                                  {
                                    "type": "string",
                                    "example": "Explicit photos"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Hate speech"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Violence"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Illegal content"
                                  }
                                ],
                                "minItems": 4,
                                "maxItems": 4,
                                "additionalItems": false
                              }
                            },
                            "required": [
                              "title",
                              "description",
                              "examples"
                            ]
                          },
                          "fake_profile": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "example": "Fake Profile"
                              },
                              "description": {
                                "type": "string",
                                "example": "Profile using fake information or photos"
                              },
                              "examples": {
                                "type": "array",
                                "prefixItems": [
                                  {
                                    "type": "string",
                                    "example": "Fake photos"
                                  },
                                  {
                                    "type": "string",
                                    "example": "False information"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Impersonation"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Bot account"
                                  }
                                ],
                                "minItems": 4,
                                "maxItems": 4,
                                "additionalItems": false
                              }
                            },
                            "required": [
                              "title",
                              "description",
                              "examples"
                            ]
                          },
                          "spam": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "example": "Spam"
                              },
                              "description": {
                                "type": "string",
                                "example": "Unwanted commercial or promotional content"
                              },
                              "examples": {
                                "type": "array",
                                "prefixItems": [
                                  {
                                    "type": "string",
                                    "example": "Commercial messages"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Promotional links"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Mass messaging"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Scams"
                                  }
                                ],
                                "minItems": 4,
                                "maxItems": 4,
                                "additionalItems": false
                              }
                            },
                            "required": [
                              "title",
                              "description",
                              "examples"
                            ]
                          },
                          "other": {
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "example": "Other"
                              },
                              "description": {
                                "type": "string",
                                "example": "Other violations not covered above"
                              },
                              "examples": {
                                "type": "array",
                                "prefixItems": [
                                  {
                                    "type": "string",
                                    "example": "Underage user"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Multiple accounts"
                                  },
                                  {
                                    "type": "string",
                                    "example": "Other violations"
                                  }
                                ],
                                "minItems": 3,
                                "maxItems": 3,
                                "additionalItems": false
                              }
                            },
                            "required": [
                              "title",
                              "description",
                              "examples"
                            ]
                          }
                        },
                        "required": [
                          "harassment",
                          "inappropriate_content",
                          "fake_profile",
                          "spam",
                          "other"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/safety/report-history": {
        "get": {
          "operationId": "safety.getReportHistory",
          "summary": "Get user's report history",
          "tags": [
            "Safety"
          ],
          "parameters": [
            {
              "name": "per_page",
              "in": "query",
              "schema": {
                "type": "string",
                "default": 20
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/safety/moderate-content": {
        "post": {
          "operationId": "safety.moderateContent",
          "summary": "Moderate content",
          "tags": [
            "Safety"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "content_type": {
                      "type": "string",
                      "enum": [
                        "profile",
                        "message",
                        "photo",
                        "story",
                        "feed"
                      ]
                    },
                    "content_id": {
                      "type": "integer"
                    },
                    "action": {
                      "type": "string",
                      "enum": [
                        "flag",
                        "review",
                        "approve",
                        "reject"
                      ]
                    },
                    "reason": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "maxLength": 500
                    }
                  },
                  "required": [
                    "content_type",
                    "content_id",
                    "action"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Content moderated successfully"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation failed"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/safety/statistics": {
        "get": {
          "operationId": "safety.getSafetyStatistics",
          "summary": "Get safety statistics",
          "tags": [
            "Safety"
          ],
          "parameters": [
            {
              "name": "period",
              "in": "query",
              "schema": {
                "type": "string",
                "default": "30d"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/stories": {
        "get": {
          "operationId": "story.index",
          "tags": [
            "Story"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/stories/upload": {
        "post": {
          "operationId": "story.store",
          "tags": [
            "Story"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "multipart/form-data": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "enum": [
                        "image",
                        "text",
                        "both"
                      ]
                    },
                    "media": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "format": "binary",
                      "contentMediaType": "application/octet-stream",
                      "maxLength": 2048
                    },
                    "text": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "maxLength": 1000
                    }
                  },
                  "required": [
                    "type"
                  ]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        }
      },
      "/stories/{id}": {
        "get": {
          "operationId": "story.show",
          "tags": [
            "Story"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "You can only view stories from matched users"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "message": {
                            "type": "string",
                            "example": "Not authorized to view this story"
                          }
                        },
                        "required": [
                          "message"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Story not found"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  }
                }
              }
            }
          }
        },
        "delete": {
          "operationId": "story.destroy",
          "tags": [
            "Story"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Story deleted"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Unauthorized"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Story not found"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/stories/{id}/like": {
        "post": {
          "operationId": "story.like",
          "tags": [
            "Story"
          ],
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Liked"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "Already liked"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "You can only like stories from matched users"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/stories/{storyId}/replies": {
        "get": {
          "operationId": "storyReply.index",
          "tags": [
            "StoryReply"
          ],
          "parameters": [
            {
              "name": "storyId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "You can only view replies for stories from matched users"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/stories/{storyId}/reply": {
        "post": {
          "operationId": "storyReply.store",
          "tags": [
            "StoryReply"
          ],
          "parameters": [
            {
              "name": "storyId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "text": {
                      "type": "string",
                      "maxLength": 1000
                    }
                  },
                  "required": [
                    "text"
                  ]
                }
              }
            }
          },
          "responses": {
            "201": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "message": {
                        "type": "string",
                        "example": "You can only reply to stories from matched users"
                      }
                    },
                    "required": [
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        }
      },
      "/sub-plans": {
        "get": {
          "operationId": "subPlan.index",
          "summary": "Display a listing of sub plans grouped by main plan",
          "tags": [
            "SubPlan"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/sub-plans/duration": {
        "get": {
          "operationId": "subPlan.getSubPlansByDuration",
          "summary": "Get sub plans by duration",
          "tags": [
            "SubPlan"
          ],
          "parameters": [
            {
              "name": "duration_days",
              "in": "query",
              "required": true,
              "schema": {
                "type": "integer",
                "minimum": 1
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        }
      },
      "/sub-plans/compare": {
        "post": {
          "operationId": "subPlan.compareSubPlans",
          "summary": "Compare sub plans",
          "tags": [
            "SubPlan"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "duration_days": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "plan_ids": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    }
                  },
                  "required": [
                    "duration_days",
                    "plan_ids"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        }
      },
      "/sub-plans/plan/{planId}": {
        "get": {
          "operationId": "subPlan.getPlanSubPlans",
          "summary": "Get all duration options for a specific plan",
          "tags": [
            "SubPlan"
          ],
          "parameters": [
            {
              "name": "planId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "plan": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "title": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "features": {
                                "type": "object",
                                "properties": {
                                  "filter_include": {
                                    "type": "string"
                                  },
                                  "direct_chat": {
                                    "type": "string"
                                  },
                                  "Like_menu": {
                                    "type": "string"
                                  },
                                  "audio_video": {
                                    "type": "string"
                                  },
                                  "chat": {
                                    "type": "string"
                                  },
                                  "daily_profile": {
                                    "type": "string"
                                  },
                                  "AI_match": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "filter_include",
                                  "direct_chat",
                                  "Like_menu",
                                  "audio_video",
                                  "chat",
                                  "daily_profile",
                                  "AI_match"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "title",
                              "description",
                              "features"
                            ]
                          },
                          "duration_options": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "plan",
                          "duration_options"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "404": {
              "$ref": "#/components/responses/ModelNotFoundException"
            }
          }
        }
      },
      "/sub-plans/upgrade-options": {
        "get": {
          "operationId": "subPlan.getUpgradeOptions",
          "summary": "Get upgrade options with prorated prices",
          "tags": [
            "SubPlan"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "success"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "current_plan": {
                                "type": "object",
                                "properties": {
                                  "plan": {
                                    "type": "string"
                                  },
                                  "sub_plan": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "title": {
                                        "type": "string"
                                      },
                                      "duration_days": {
                                        "type": "string"
                                      },
                                      "duration_months": {
                                        "type": "string"
                                      },
                                      "price": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "title",
                                      "duration_days",
                                      "duration_months",
                                      "price"
                                    ]
                                  },
                                  "days_remaining": {
                                    "type": "string"
                                  },
                                  "amount_paid": {
                                    "type": "string"
                                  },
                                  "expire_date": {
                                    "type": "string"
                                  },
                                  "tier_info": {
                                    "type": "object",
                                    "properties": {
                                      "current_tier_index": {
                                        "type": "string"
                                      },
                                      "total_tiers": {
                                        "type": "string"
                                      },
                                      "is_highest": {
                                        "type": "boolean"
                                      },
                                      "available_upgrades": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "current_tier_index",
                                      "total_tiers",
                                      "is_highest",
                                      "available_upgrades"
                                    ]
                                  }
                                },
                                "required": [
                                  "plan",
                                  "sub_plan",
                                  "days_remaining",
                                  "amount_paid",
                                  "expire_date",
                                  "tier_info"
                                ]
                              },
                              "upgrade_options": {
                                "type": "string"
                              },
                              "upgrade_rules": {
                                "type": "object",
                                "properties": {
                                  "can_upgrade_to": {
                                    "type": "object",
                                    "properties": {
                                      "higher_tier_plans": {
                                        "type": "boolean"
                                      },
                                      "same_tier_longer_duration": {
                                        "type": "boolean"
                                      },
                                      "lower_tier_plans": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "higher_tier_plans",
                                      "same_tier_longer_duration",
                                      "lower_tier_plans"
                                    ]
                                  },
                                  "message": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string",
                                    "example": "can_upgrade"
                                  }
                                },
                                "required": [
                                  "can_upgrade_to",
                                  "message",
                                  "status"
                                ]
                              }
                            },
                            "required": [
                              "current_plan",
                              "upgrade_options",
                              "upgrade_rules"
                            ]
                          }
                        },
                        "required": [
                          "status",
                          "data"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "success"
                          },
                          "data": {
                            "type": "object",
                            "properties": {
                              "current_plan": {
                                "type": "object",
                                "properties": {
                                  "plan": {
                                    "type": "string"
                                  },
                                  "sub_plan": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "title": {
                                        "type": "string"
                                      },
                                      "duration_days": {
                                        "type": "string"
                                      },
                                      "duration_months": {
                                        "type": "string"
                                      },
                                      "price": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "title",
                                      "duration_days",
                                      "duration_months",
                                      "price"
                                    ]
                                  },
                                  "days_remaining": {
                                    "type": "string"
                                  },
                                  "amount_paid": {
                                    "type": "string"
                                  },
                                  "expire_date": {
                                    "type": "string"
                                  },
                                  "tier_info": {
                                    "type": "object",
                                    "properties": {
                                      "current_tier_index": {
                                        "type": "string"
                                      },
                                      "total_tiers": {
                                        "type": "string"
                                      },
                                      "is_highest": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "current_tier_index",
                                      "total_tiers",
                                      "is_highest"
                                    ]
                                  }
                                },
                                "required": [
                                  "plan",
                                  "sub_plan",
                                  "days_remaining",
                                  "amount_paid",
                                  "expire_date",
                                  "tier_info"
                                ]
                              },
                              "upgrade_options": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "minItems": 0,
                                "maxItems": 0,
                                "additionalItems": false
                              },
                              "upgrade_rules": {
                                "type": "object",
                                "properties": {
                                  "can_upgrade_to": {
                                    "type": "object",
                                    "properties": {
                                      "higher_tier_plans": {
                                        "type": "boolean"
                                      },
                                      "same_tier_longer_duration": {
                                        "type": "boolean"
                                      },
                                      "lower_tier_plans": {
                                        "type": "boolean"
                                      }
                                    },
                                    "required": [
                                      "higher_tier_plans",
                                      "same_tier_longer_duration",
                                      "lower_tier_plans"
                                    ]
                                  },
                                  "message": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string",
                                    "example": "highest_tier"
                                  }
                                },
                                "required": [
                                  "can_upgrade_to",
                                  "message",
                                  "status"
                                ]
                              }
                            },
                            "required": [
                              "current_plan",
                              "upgrade_options",
                              "upgrade_rules"
                            ]
                          }
                        },
                        "required": [
                          "status",
                          "data"
                        ]
                      }
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "Current sub-plan not found. Please contact support."
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "example": "error"
                          },
                          "message": {
                            "type": "string",
                            "example": "No active plan found"
                          }
                        },
                        "required": [
                          "status",
                          "message"
                        ]
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/sub-plans/upgrade": {
        "post": {
          "operationId": "subPlan.upgradePlan",
          "summary": "Process plan upgrade with prorated pricing",
          "tags": [
            "SubPlan"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "new_sub_plan_id": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "new_sub_plan_id"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Plan upgraded successfully"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "new_plan": {
                            "type": "object",
                            "properties": {
                              "plan": {
                                "type": "string"
                              },
                              "sub_plan": {
                                "type": "string"
                              },
                              "purchase_details": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "plan",
                              "sub_plan",
                              "purchase_details"
                            ]
                          },
                          "previous_plan": {
                            "type": "object",
                            "properties": {
                              "plan": {
                                "type": "string"
                              },
                              "sub_plan": {
                                "type": "string"
                              },
                              "expire_date": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "plan",
                              "sub_plan",
                              "expire_date"
                            ]
                          },
                          "upgrade_details": {
                            "type": "object",
                            "properties": {
                              "prorated_price": {
                                "type": "string"
                              },
                              "credit_applied": {
                                "type": "string"
                              },
                              "credit_explanation": {
                                "type": "string"
                              },
                              "original_remaining_value": {
                                "type": "string"
                              },
                              "penalty_amount": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "prorated_price",
                              "credit_applied",
                              "credit_explanation",
                              "original_remaining_value",
                              "penalty_amount"
                            ]
                          }
                        },
                        "required": [
                          "new_plan",
                          "previous_plan",
                          "upgrade_details"
                        ]
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "403": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Banned users cannot upgrade plans"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "404": {
              "$ref": "#/components/responses/ModelNotFoundException"
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "error"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to process plan upgrade"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/sub-plans/{subPlan}": {
        "get": {
          "operationId": "subPlan.show",
          "summary": "Display the specified sub plan",
          "tags": [
            "SubPlan"
          ],
          "parameters": [
            {
              "name": "subPlan",
              "in": "path",
              "required": true,
              "description": "The sub plan ID",
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "404": {
              "$ref": "#/components/responses/ModelNotFoundException"
            }
          }
        }
      },
      "/superlike-packs/stripe-webhook": {
        "post": {
          "operationId": "superlikePack.handleStripeWebhook",
          "tags": [
            "SuperlikePack"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "anyOf": [
                      {
                        "type": "string",
                        "example": "Webhook handled"
                      },
                      {
                        "type": "string",
                        "example": "Pack not found"
                      },
                      {
                        "type": "string",
                        "example": "User not found"
                      }
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "string",
                    "example": "Invalid payload or signature"
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/superlike-packs/stripe-checkout": {
        "post": {
          "operationId": "superlikePack.createStripeCheckout",
          "tags": [
            "SuperlikePack"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pack_id": {
                      "type": "integer"
                    },
                    "success_url": {
                      "type": "string",
                      "format": "uri"
                    },
                    "cancel_url": {
                      "type": "string",
                      "format": "uri"
                    },
                    "currency": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "pack_id",
                    "success_url",
                    "cancel_url"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "url"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        }
      },
      "/superlike-packs/available": {
        "get": {
          "operationId": "superlikePack.getAvailablePacks",
          "summary": "Get available superlike packs",
          "tags": [
            "SuperlikePack"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "packs": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "packs"
                        ]
                      }
                    },
                    "required": [
                      "success",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/superlike-packs/purchase": {
        "post": {
          "operationId": "superlikePack.purchasePack",
          "summary": "Purchase a superlike pack",
          "tags": [
            "SuperlikePack"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pack_id": {
                      "type": "integer"
                    },
                    "payment_method": {
                      "type": "string"
                    },
                    "transaction_id": {
                      "type": [
                        "string",
                        "null"
                      ]
                    }
                  },
                  "required": [
                    "pack_id",
                    "payment_method"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "enum": [
                          "Superlike pack purchased successfully! It will be activated after your current packs are used up.",
                          "Superlike pack purchased successfully!"
                        ]
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "user_pack": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "pack_name": {
                                "type": "string"
                              },
                              "quantity": {
                                "type": "string"
                              },
                              "remaining": {
                                "type": "string"
                              },
                              "price_paid": {
                                "type": "string"
                              },
                              "purchased_at": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              },
                              "is_pending": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "pack_name",
                              "quantity",
                              "remaining",
                              "price_paid",
                              "purchased_at",
                              "status",
                              "is_pending"
                            ]
                          },
                          "existing_active_packs": {
                            "type": "string"
                          },
                          "updated_superlike_info": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "user_pack",
                          "existing_active_packs",
                          "updated_superlike_info"
                        ]
                      }
                    },
                    "required": [
                      "success",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Superlike pack not found or inactive"
                      }
                    },
                    "required": [
                      "success",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation error"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "success",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to purchase superlike pack"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "success",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/superlike-packs/user-packs": {
        "get": {
          "operationId": "superlikePack.getUserPacks",
          "summary": "Get user's purchased superlike packs",
          "tags": [
            "SuperlikePack"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "user_packs": {
                            "type": "string"
                          },
                          "summary": {
                            "type": "object",
                            "properties": {
                              "total_purchased": {
                                "type": "string"
                              },
                              "total_remaining": {
                                "type": "string"
                              },
                              "total_used": {
                                "type": "string"
                              },
                              "active_packs_count": {
                                "type": "string"
                              },
                              "pending_packs_count": {
                                "type": "string"
                              },
                              "expired_packs_count": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "total_purchased",
                              "total_remaining",
                              "total_used",
                              "active_packs_count",
                              "pending_packs_count",
                              "expired_packs_count"
                            ]
                          },
                          "pack_status_summary": {
                            "type": "object",
                            "properties": {
                              "active": {
                                "type": "string"
                              },
                              "pending": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "active",
                              "pending"
                            ]
                          }
                        },
                        "required": [
                          "user_packs",
                          "summary",
                          "pack_status_summary"
                        ]
                      }
                    },
                    "required": [
                      "success",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/superlike-packs/purchase-history": {
        "get": {
          "operationId": "superlikePack.getPurchaseHistory",
          "summary": "Get superlike pack purchase history",
          "tags": [
            "SuperlikePack"
          ],
          "parameters": [
            {
              "name": "limit",
              "in": "query",
              "schema": {
                "type": "string",
                "default": 20
              }
            },
            {
              "name": "offset",
              "in": "query",
              "schema": {
                "type": "string",
                "default": 0
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "purchases": {
                            "type": "string"
                          },
                          "pagination": {
                            "type": "object",
                            "properties": {
                              "total": {
                                "type": "string"
                              },
                              "limit": {
                                "type": "string"
                              },
                              "offset": {
                                "type": "string"
                              },
                              "has_more": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "total",
                              "limit",
                              "offset",
                              "has_more"
                            ]
                          }
                        },
                        "required": [
                          "purchases",
                          "pagination"
                        ]
                      }
                    },
                    "required": [
                      "success",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/superlike-packs/activate-pending": {
        "post": {
          "operationId": "superlikePack.activatePendingPack",
          "summary": "Manually activate a pending superlike pack (for testing/admin purposes)",
          "tags": [
            "SuperlikePack"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pack_id": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "pack_id"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Pending pack activated successfully!"
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "activated_pack": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "pack_name": {
                                "type": "string"
                              },
                              "remaining": {
                                "type": "string"
                              },
                              "total": {
                                "type": "string"
                              },
                              "status": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id",
                              "pack_name",
                              "remaining",
                              "total",
                              "status"
                            ]
                          },
                          "updated_superlike_info": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "activated_pack",
                          "updated_superlike_info"
                        ]
                      }
                    },
                    "required": [
                      "success",
                      "message",
                      "data"
                    ]
                  }
                }
              }
            },
            "400": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Cannot activate pending pack while active packs have remaining superlikes"
                      }
                    },
                    "required": [
                      "success",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "404": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Pending pack not found or cannot be activated"
                      }
                    },
                    "required": [
                      "success",
                      "message"
                    ]
                  }
                }
              }
            },
            "422": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Validation error"
                      },
                      "errors": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "success",
                      "message",
                      "errors"
                    ]
                  }
                }
              }
            },
            "500": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean"
                      },
                      "message": {
                        "type": "string",
                        "example": "Failed to activate pending pack"
                      },
                      "error": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "success",
                      "message",
                      "error"
                    ]
                  }
                }
              }
            }
          }
        }
      },
      "/analytics/my-analytics": {
        "get": {
          "operationId": "userAnalytics.getMyAnalytics",
          "summary": "Get user's own analytics",
          "tags": [
            "UserAnalytics"
          ],
          "parameters": [
            {
              "name": "days",
              "in": "query",
              "schema": {
                "type": "string",
                "default": 30
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/analytics/engagement": {
        "get": {
          "operationId": "userAnalytics.getEngagement",
          "summary": "Get user engagement metrics",
          "tags": [
            "UserAnalytics"
          ],
          "parameters": [
            {
              "name": "days",
              "in": "query",
              "schema": {
                "type": "string",
                "default": 30
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/analytics/retention": {
        "get": {
          "operationId": "userAnalytics.getRetention",
          "summary": "Get user retention metrics",
          "tags": [
            "UserAnalytics"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/analytics/interactions": {
        "get": {
          "operationId": "userAnalytics.getInteractions",
          "summary": "Get user interaction metrics",
          "tags": [
            "UserAnalytics"
          ],
          "parameters": [
            {
              "name": "days",
              "in": "query",
              "schema": {
                "type": "string",
                "default": 30
              }
            }
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/analytics/profile-metrics": {
        "get": {
          "operationId": "userAnalytics.getProfileMetrics",
          "summary": "Get user profile metrics",
          "tags": [
            "UserAnalytics"
          ],
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "data": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "status",
                      "data"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            }
          }
        }
      },
      "/analytics/track-activity": {
        "post": {
          "operationId": "userAnalytics.trackActivity",
          "summary": "Track user activity",
          "tags": [
            "UserAnalytics"
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string",
                      "maxLength": 100
                    },
                    "metadata": {
                      "type": [
                        "array",
                        "null"
                      ],
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "required": [
                    "action"
                  ]
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "example": "success"
                      },
                      "message": {
                        "type": "string",
                        "example": "Activity tracked successfully"
                      }
                    },
                    "required": [
                      "status",
                      "message"
                    ]
                  }
                }
              }
            },
            "401": {
              "$ref": "#/components/responses/AuthenticationException"
            },
            "422": {
              "$ref": "#/components/responses/ValidationException"
            }
          }
        }
      }
    },
    "components": {
      "responses": {
        "AuthenticationException": {
          "description": "Unauthenticated",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Error overview."
                  }
                },
                "required": [
                  "message"
                ]
              }
            }
          }
        },
        "ValidationException": {
          "description": "Validation error",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Errors overview."
                  },
                  "errors": {
                    "type": "object",
                    "description": "A detailed description of each field that failed validation.",
                    "additionalProperties": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                },
                "required": [
                  "message",
                  "errors"
                ]
              }
            }
          }
        },
        "ModelNotFoundException": {
          "description": "Not found",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string",
                    "description": "Error overview."
                  }
                },
                "required": [
                  "message"
                ]
              }
            }
          }
        }
      }
    }
  }